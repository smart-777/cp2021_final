<h1>About</h1>
<p>Repository: <a href="https://github.com/mdecourse/cp2021_final">https://github.com/mdecourse/cp2021_final</a></p>
<p>Github Pages: <a href="https://mde.tw/cp2021_final">https://mde.tw/cp2021_final</a></p>
<p>Discussion: <a href="https://github.com/mdecourse/cp2021_final/discussions">https://github.com/mdecourse/cp2021_final/discussions</a></p>
<p>課程網站: <a href="https://mde.tw/cp2021">https://mde.tw/cp2021</a></p>
<p>作業網站: <a href="https://mde.tw/cp2021_hw">https://mde.tw/cp2021_hw</a></p>
<p><a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/040036c57b1d81cc1c0608fe66316651/raw/42746c1e3d22aefbf0bd78fec4945d1c54243930/cp2021_1a_random_select.py">1a 抽點 10 位學員</a>查驗其作業倉儲與網站 (<a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/040036c57b1d81cc1c0608fe66316651/raw/e7aa175bdf9d43d47ed521ab84bf6018054fe28e/cp2021_1a_list.py">1a 學員倉儲與網站</a>).</p>
<p><a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/040036c57b1d81cc1c0608fe66316651/raw/42746c1e3d22aefbf0bd78fec4945d1c54243930/cp2021_1b_random_select.py">1b 抽點 10 位學員</a>查驗其作業倉儲與網站 (<a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/040036c57b1d81cc1c0608fe66316651/raw/42746c1e3d22aefbf0bd78fec4945d1c54243930/cp2021_1b_list.py">1b 學員倉儲與網站</a>).</p>
<h2>Programming</h2>
<p>以下為各組長所提供的學員名單格式，其中以各組組序標題開頭，然後逐一列出各組員學號:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">1ag1
41023146
41023143
41023147
41023113
41023116
41023111
41023145
1ag2
41023104
41023103
41023105
41023106
41023107
41023109
1ag3
41023125
41023119
41023120
41023124
41023118
41023122
41023130
1ag4
40923129
41023135
41023150
41023151
41023152
40923115
41023132
1ag5
41023114
41023126
41023101
41023110
41023108
40823214
1ag6
41023121
41023140
41023133
41023112
41023153
41023134
41023138
40832244
1ag7
41023142
41023137
41023129
41023131
41023127
41023141
1ag8
40823227
41023154
41023128
41023136
41023144
41023149</pre>
<p>接著希望能夠透過 Python 程式讀出各組組序標題與組員名單，之後將要利用此一資料從 downloads 目錄取出各組員的動態網頁內容，並將資料按照組序放入 config/content.htm 檔案中。</p>
<p>以下為初步完成的程式編寫:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">'''設法讀出各班各組學員學號資料
'''
repo_path = "Y:/tmp/cp2021_final"
class_name = "1a"
group_file = repo_path + "/downloads/" + class_name + "_grouping.txt"

with open(group_file, encoding="utf-8") as f:
    data = f.read().splitlines()
data = list(filter(None, data))
#print(data)
grp_count = 0
grp_title = []
grp_mem = []
grp_big = []
for i in data:
    if class_name in i:
        mem_count = 0
        grp_count += 1
        grp = i
        # 納入各組組序標題
        grp_title.append(i)
        # 若 grp_mem 有值, 表示已經讀完各組學員名單
        # 就可以將該組全員名單納入 grp_big 數列中
        # 然後 grp_mem 重新設為空數列, 準備納入下一組員名單
        if len(grp_mem)  1:
            grp_big.append(grp_mem)
            grp_mem = []
        #print("組別:", grp_count, grp)
    else:
        # 讀完各組組序標題後, 將逐一將組員名單納入 grp_mem 數列中
        grp_mem.append(i)
        mem_count += 1
        student_id = i
        #print("學員:", mem_count, student_id)
# 離開組序標題後, 必須納入最後一組學員名單
grp_big.append(grp_mem)
# 查驗是否正確讀入各班組員名單
#print(grp_title, grp_big)
for i in range(len(grp_title)):
    # 分別讀出各組組序與排序後的組員學號
    print(grp_title[i], sorted(grp_big[i]))</pre>
<h2>Final</h2>
<p>假如希望利用 Brython 讀取 <a href="http://mde.tw/cp2021_final/downloads/1a_grouping.txt">http://mde.tw/cp2021_final/downloads/1a_grouping.txt</a>, 初步讀取各班的程式編寫為: <a href="https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/41df2412bfd277c5b8e1fe52b0fe47d4fc0fbacb/cp2021_final.py">https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/41df2412bfd277c5b8e1fe52b0fe47d4fc0fbacb/cp2021_final.py</a></p>
<p>BSnake 是從 <a href="https://hawstein.com/2013/04/15/snake-ai/">https://hawstein.com/2013/04/15/snake-ai/</a> (<a href="/downloads/BSnake_ref_blog.pdf">pdf</a>)修改為能夠在 Brython 網際程式環境中執行的版本.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">add 1 to 100</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="snake">Snake</button><button id="bsnake">BSnake</button><button id="final">Final</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        #url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
        url = "https://gist.githubusercontent.com/mdecourse/2a8f213b6858a40481d17556c8a2fe86/raw/0a4a824493865dc7cf56977d03c9438d002b4268/kmlo_snakey.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## snake start
snake_url = "https://gist.githubusercontent.com/mdecourse/d55158478f4f8fcbfedd455f8be8c7b6/raw/f29309745a98687ed5c41cf90d28ef25a1e48dd4/snake_brython_div.py"
snake = button2(snake_url)
doc["snake"].bind("click", snake.do)
################################## snake end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecourse/2a8f213b6858a40481d17556c8a2fe86/raw/0a4a824493865dc7cf56977d03c9438d002b4268/kmlo_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## final start
final_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/41df2412bfd277c5b8e1fe52b0fe47d4fc0fbacb/cp2021_final.py"
final = button2(final_url)
doc["final"].bind("click", final.do)
################################## final end
</script>
</p><h1>Final Project</h1>
<h4 dir="auto">cp2021 Final Project</h4>
<h4 dir="auto">計算機程式期末學習驗證與評分網站</h4>
<p><a href="https://mde.tw/cp2021_final">https://mde.tw/cp2021_final</a></p>
<p dir="auto">倉儲: <a href="https://github.com/mdecourse/cp2021_final">https://github.com/mdecourse/cp2021_final</a></p>
<p dir="auto">本網站自 2021.12.27 起收集各班各分組成員在本學期各項作業與期末專案所完成的成果, 並藉此進行學員的課程學期成績評分.</p>
<h4 dir="auto">cp2021 Final Project</h4>
<h4 dir="auto">計算機程式期末學習驗證與評分網站</h4>
<p dir="auto"><a href="http://mde.tw/cp2021_final" rel="nofollow">http://mde.tw/cp2021_final</a></p>
<p dir="auto">本網站自 2021.12.27 起收集各班各分組成員在本學期各項作業與期末專案所完成的成果, 請根據下列規劃流程, 將個人在本學期所寫過的程式, 以網際按鈕形式呈現在個人所分配的 H3 頁面中, 並藉此進行學員的課程學期成績評分.</p>
<p dir="auto"><a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/9297ec10e8a151207e7e76373b78ad64/raw/a7a527b6d268f0e61f562c51db69ba3f4de6b2da/cp1a_count_num_of_stud.py" rel="nofollow">1a 修課人數</a>為 64 人, 64 = 7*9 + 1, 分為 9 組. H1 標題為 1a, H2 為 1ag1 ~ 1ag9, 各組員以學號為標題, 依學號遞減排列, 設為 H3 頁面, 各學員則將課程學習成果呈現在各自的 H3 頁面中, 並以 Pull Requests 方式提出拉回合併之請求.</p>
<p dir="auto"><a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/9297ec10e8a151207e7e76373b78ad64/raw/a7a527b6d268f0e61f562c51db69ba3f4de6b2da/cp1b_count_num_of_stud.py" rel="nofollow">1b 修課人數</a>為 55 人, 55 = 7*8 - 1, 分為 8 組. H1 標題為 1b, H2 為 1bg1 ~ 1bg8, 各組員以學號為標題, 依學號遞減排列, 設為 H3 頁面, 各學員則將課程學習成果呈現在各自的 H3 頁面中, 並以 Pull Requests 方式提出拉回合併之請求.</p>
<h1>Notice</h1>
<p>各組必須先自願或推舉出一位組長與一位副組長負責成為 <a href="https://github.com/mdecourse/cp2021_final">https://github.com/mdecourse/cp2021_final</a> 倉儲的管理雙人組, 組長將設為期末倉儲的管理協同者, 擁有合併或拒絕 Pull Requests 的權限, 各組推選出兩位管理學員後, 請將學號登錄至 <a href="https://github.com/mdecourse/cp2021_final/discussions/1">https://github.com/mdecourse/cp2021_final/discussions/1</a></p>
<p>各學員利用 Pull Requests 將個人的期末評分內容放入本網站的流程:</p>
<ol>
<li>登入自己的 Github 帳號.</li>
<li>fork <a href="https://github.com/mdecourse/cp2021_final">https://github.com/mdecourse/cp2021_final</a> 倉儲到自己的帳號下</li>
<li>將自己帳號下的 cp2021_final 倉儲以 git clone --recurse-submodules url 到近端進行改版.</li>
<li>改版後, 在自己帳號下對 cp2021_final 倉儲提交並推送新版本後, 必須在自季的 cp2021_final 倉儲處建立 Pull Request 後, 請組長與副組長查驗合併後內容無誤後, 且合併至主倉儲與 <a href="https://mde.tw/cp2021_final">https://mde.tw/cp2021_final</a> 網頁中.</li>
<li>若各組員進行 fork 後, <a href="https://github.com/mdecourse/cp2021_final">https://github.com/mdecourse/cp2021_final</a> 倉儲已經被其他組員多次改版, 則該組員必須採用反向 Pull Requests, 將自己帳號下的 cp2021_final 倉儲的版本儘量接近之後處理 Pull Requests 時的 cp2021_final 倉儲版本, 以降低各組組員最後進行 Pull Requests 合併時處理衝突的難度.</li>
<li>各組組長與副組長接到組員已經完成特定階段新增的 Pull Requests 後, 必須設法將其版本內容合併至期末評分網站中.</li>
</ol>
<h1>1a</h1>
<h2>1ademo</h2><h3>scrum-3</h3>
<h4>BSnake</h4>
<p>scrum-3 轉為協同管理者</p>
<p>BSnake 是從 <a href="https://hawstein.com/2013/04/15/snake-ai/">https://hawstein.com/2013/04/15/snake-ai/</a> (<a href="/downloads/BSnake_ref_blog.pdf">pdf</a>)修改為能夠在 Brython 網際程式環境中執行的版本.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">add 1 to 100</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="snake">Snake</button><button id="bsnake">BSnake</button><button id="plt_fourbar">Fourbar</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        #url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
        url = "https://gist.githubusercontent.com/mdecourse/2a8f213b6858a40481d17556c8a2fe86/raw/0a4a824493865dc7cf56977d03c9438d002b4268/kmlo_snakey.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## snake start
snake_url = "https://gist.githubusercontent.com/mdecourse/d55158478f4f8fcbfedd455f8be8c7b6/raw/f29309745a98687ed5c41cf90d28ef25a1e48dd4/snake_brython_div.py"
snake = button2(snake_url)
doc["snake"].bind("click", snake.do)
################################## snake end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecourse/2a8f213b6858a40481d17556c8a2fe86/raw/0a4a824493865dc7cf56977d03c9438d002b4268/kmlo_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
########### fourbar start
fourbar_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/3bf239d137f72b807aadc347aaf483d9a45fd028/fourbar_plt.py"
fourbar = button2(fourbar_url)
doc["plt_fourbar"].bind("click", fourbar.do)
########### fourbar end
</script>
</p>
<h3>Scrum-1</h3>
<p>協同設計並沒有想像中容易, 參與協同的成員必須對於協同的各方面架構與流程處理的原委非常清楚, 才能因應問題處理.</p>
<p>以所謂的逆向 pull requests, 假如使用者不是在每次改版前才重新 fork, 可能會遭遇無法直接在線上合併資料, 而必須 clone 倉儲到近端處理.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">add 1 to 100</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="snake">Snake</button><button id="bsnake">BSnake</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        #url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
        url = "https://gist.githubusercontent.com/mdecourse/2a8f213b6858a40481d17556c8a2fe86/raw/0a4a824493865dc7cf56977d03c9438d002b4268/kmlo_snakey.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## snake start
snake_url = "https://gist.githubusercontent.com/mdecourse/d55158478f4f8fcbfedd455f8be8c7b6/raw/f29309745a98687ed5c41cf90d28ef25a1e48dd4/snake_brython_div.py"
snake = button2(snake_url)
doc["snake"].bind("click", snake.do)
################################## snake end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecourse/2a8f213b6858a40481d17556c8a2fe86/raw/0a4a824493865dc7cf56977d03c9438d002b4268/kmlo_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
</script>
</p>
<h2>1ag1</h2><h3>41023147</h3>
<p>1.作業一的紅色方塊</p>
<p><button id="hw1_1">hw1_1</button><button id="hw1_2">hw1_2</button></p>
<p>2.第十三週考試及延伸</p>
<p><button id="列出10個座標">列出10個座標</button><button id="表格">表格</button></p>
<p>3.python教科書習題</p>
<p><button id="w13">1~100</button><button id="w11">2.6_1</button><button id="w11_0">2.6_2</button><button id="w11_2">2.6_3</button></p>
<p>4.作業三貪食蛇</p>
<p><button id="snake">勤勞蛇</button><button id="snake2">蛇2</button></p>
<p>5.第十二週習題</p>
<p><button id="w12">台灣國旗</button><button id="w12_2">日本國旗</button></p>
<p>6.期末小測試</p>
<p><button id="final_1">final_1</button><button id="final_2">final_2</button></p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- for ggame -->
<p>
<script src="/static/jquery-3.3.1.min.js"></script>
<script src="/static/jquery-ui.1.12.1.min.js"></script>
<script src="/static/pixi-3.0.5.min.js"></script>
<script src="/static/buzz-1.2.1.js"></script>
<script src="/static/bs.js"></script>
<script src="/downloads/brython_modules.js"></script>
</p>
<p><!-- Cango 程式庫 --></p>
<p>
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/CangoAxes-6v01-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
</p>
<p><!-- for Konva 程式庫 --></p>
<p>
<script src="/static/konva.min.js"></script>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
from browser import html
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
Ace.editor.setValue("""# 導入 sys 模組
import sys
# 導入 keyword 模組
import keyword
def helloWorld():
    print("Hello World!")
helloWorld()
# 利用 sys 模組中的 version_info 印出 Python 版次
print("Python version: ", sys.version_info)
# 利用 keyword 模組中的 kwlist 印出關鍵字
print("Python keywords: ", keyword.kwlist)
""")
Ace.editor.scrollToRow(0)
Ace.editor.gotoLine(0)
# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"><a href="https://youtu.be/vNYhVI9YJMQ">final_1影片</a>、<a href="https://youtu.be/5lODbwLdRi8">final_2影片</a></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form>
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<div id="brython_div"></div>
<div>======================================</div>
<div>在這學期的計算機課程中,我學到了很多以前國高中接觸不到的課程,一開始甚至有點無法適應,後來在同學的仔細說明以及努力理解後,才終於有稍微知道自己在做甚麼的感覺,甚至還有了一絲成就感,特別是在找出自己的程式哪裡有問題的時候。</div>
<div class="col-md-0" height="1" id="graphics-column" width="1"></div>
<p><!-- ****************************** keyword start -->
<script type="text/python3">
from browser import document as doc
# 導入位於 static 目錄下的 beditor.py 
import beditor
# 利用 beditor.py 中的 editor 類別建立案例, 對應到 kw1
kw1 = beditor.editor("""# 導入 sys 模組
import sys
# 導入 keyword 模組
import keyword
# 利用 sys 模組中的 version_info 印出 Python 版次
print("Python version: ", sys.version_info)
# 利用 keyword 模組中的 kwlist 印出關鍵字
print("Python keywords: ", keyword.kwlist)
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "keyword" 的按鈕點按時, 執行 kw1 物件中的 prog 方法
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Xiang0502/036455fcae57069f09ae62d03d7dfa9d/raw/855e34261668016b93b01fbe40f8b5f9eb5cc3a8/HW1"
src = open(url).read()
hw1_1 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["hw1_1"].bind("click", hw1_1.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Xiang0502/c80dfacf8f58db727603e1773d182ddb/raw/131da06b7f3e574d96c1e03631fcdfd3f3a90b66/HW1-2"
src = open(url).read()
hw1_2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["hw1_2"].bind("click", hw1_2.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Xiang0502/5dc82b4e7555ede334730d407408f7e3/raw/7351ea03dffebd8fd8bb34b51397e024936201c8/W13"
src = open(url).read()
列出10個座標 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["列出10個座標"].bind("click", 列出10個座標.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Xiang0502/aab6911980e8ef22b4e9c9b4a12da3b2/raw/d1f55a4e804bb0e5fc2a430c0a2e3cadac45e492/w13-2"
src = open(url).read()
表格 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["表格"].bind("click", 表格.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Xiang0502/d8ac084b54738c01c0ac3b9e35ae102f/raw/6f13e6bd90334ba608115ef0a6655e4f29713988/1%2520add%2520to%2520100"
src = open(url).read()
w13 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w13"].bind("click", w13.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Xiang0502/e8988a6853fcd134d6d0cec35e6f4372/raw/853317a4298eac26cb5c44f3ea25cfe2f84a5cde/py261"
src = open(url).read()
w11 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w11"].bind("click", w11.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Xiang0502/2c8fec7b17b4e219d93acb126b5097ad/raw/daaa5409dda92415147c49de8d6a1645c0cf5a21/py262"
src = open(url).read()
w11_0 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w11_0"].bind("click", w11_0.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Xiang0502/e5ec864d525b2c69d63f177f7de1bdc7/raw/e80ef4ab170e79f4b611c3effd1632121402eedb/py263"
src = open(url).read()
w11_2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w11_2"].bind("click", w11_2.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Xiang0502/1abebba846ee7d82a9758123b59d186f/raw/30c1f6a5b8a9b3696716659e2d76f559ce352cb0/ai%2520snake"
src = open(url).read()
snake = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake"].bind("click", snake.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Xiang0502/b3ae219723752c8398e7e7a881ffbae0/raw/e8876a7172004c350ac10262e412901a07bcf38a/w12"
src = open(url).read()
w12 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w12"].bind("click", w12.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Xiang0502/570a32544ee6f179de4cc8fed5fd527e/raw/687f2182a071a049f334fa282bf0b04feb79a49a/w12%25E5%25BB%25B6%25E4%25BC%25B8"
src = open(url).read()
w12_2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w12_2"].bind("click", w12_2.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Xiang0502/ecfdb47d2d49314c77365243f36ca595/raw/bfc29324250054bf4b2ec2bd7715954bf45f283c/final_1"
src = open(url).read()
final_1 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final_1"].bind("click", final_1.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Xiang0502/8b87eb5b998291a29c44305918605e11/raw/90abdb0ae4e11dc9eeabd9e6d7d7cc3e70644fde/final_2"
src = open(url).read()
final_2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final_2"].bind("click", final_2.prog)
</script>
</p>
<h3>41023146</h3>
<script>
###############################################
</script>
<p>1.作業一的紅色方塊</p>
<p><button id="hw1_1">hw1_1</button><button id="hw1_2">hw1_2</button></p>
<p>2.第十三週考試及延伸</p>
<p><button id="w13">w13</button><button id="w13_2">畫表格</button><button id="w13_3">隨機生成方格</button><button id="w13_4">隨機生成方格plus</button></p>
<p>3.python教科書習題</p>
<p><button id="w11_0">1加到100</button><button id="w11">2.6_1</button><button id="w11_1">2.6_2</button><button id="w11_2">2.6_3</button><button id="w11_3">2.6_3plus</button></p>
<p>4.作業三貪食蛇</p>
<p><button id="貪食蛇">snake</button><button id="snake_t1">snake_t1</button><button id="snake_t2">snake_t2</button><button id="snake_berry">snake_berry</button><button id="ai_snake">ai_snake</button><button id="Bsnake">Bsnake</button></p>
<p>5.其他及小遊戲</p>
<p><button id="w14">簡易計算機</button><button id="w14_1">猜數字遊戲</button></p>
<p>6.期末測驗</p>
<p><button id="final_1">final_1</button><button id="final_2">final_2</button></p>
<p>
<script>
###############################################
</script>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- for ggame --></p>
<p>
<script src="/static/jquery-3.3.1.min.js"></script>
<script src="/static/jquery-ui.1.12.1.min.js"></script>
<script src="/static/pixi-3.0.5.min.js"></script>
<script src="/static/buzz-1.2.1.js"></script>
<script src="/static/bs.js"></script>
<script src="/downloads/brython_modules.js"></script>
</p>
<p><!-- Cango 程式庫 --></p>
<p>
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/CangoAxes-6v01-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
</p>
<p><!-- for Konva 程式庫 --></p>
<p>
<script src="/static/konva.min.js"></script>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
from browser import html
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
Ace.editor.setValue("""# 導入 sys 模組
import sys
# 導入 keyword 模組
import keyword
def helloWorld():
    print("Hello World!")
helloWorld()
# 利用 sys 模組中的 version_info 印出 Python 版次
print("Python version: ", sys.version_info)
# 利用 keyword 模組中的 kwlist 印出關鍵字
print("Python keywords: ", keyword.kwlist)
""")
Ace.editor.scrollToRow(0)
Ace.editor.gotoLine(0)
# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form>
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<div style="width: 100%; height: 100%;"></div>
<div id="brython_div"> </div>
<div>================================================================= </div>
<div>1.關於hw1的紅色方塊,是我第一次接觸python,一開始什麼都看不懂,到後來才發現是用browser.timer</div>
<div>個模組配合if迴圈使函式隔一段時間執行一次產生移動的效果,還有將方塊著做成有啟動和暫停按鈕,我一開始因為不熟悉課程網站沒找到Cango裡的fourbar按鈕,所以我在網上查了很多python的資料,雖然那些資料沒讓我做出按鈕,但也讓我學到很多(最後還是找到fourbar按鈕才學會的)。</div>
<div>2.在w13的測驗中我學會了random的用法並完成延伸,我發現如果延伸中的數字改成方塊是不是可以做成貪食蛇中那個隨機生成的莓果,然後我就再延伸了兩個按鈕出來。</div>
<div>3.在第十二周的時候用cmd啟動python來熟悉python的基本運算,並在之後完成了pthon教科書2_6的習題並做成按鈕。</div>
<div>4.作業三一開始我不知道是要從頭做一隻貪食蛇還是改編老師的貪食蛇,所以我就從頭開始做,一開始是從作業一的方塊開始改,第一個完成的是sanke_t1這隻只有頭且只能吃一次方塊的蛇,然後我用w13延伸做出了貪食蛇的莓果snake_berry,最後將這兩個融合成snake_t2,然後我看到學長交的作業是改編老師的貪食蛇,所以我又做了ai_sanke,最後我看到同學在貪食蛇上加按鈕,然後我就結合老師snake和Bsnake的按鈕做了一個Bsnake。</div>
<div>5.簡易計算機和猜數字遊戲是我和<a href="https://github.com/41023121/cp2021_hw">41023121</a>同學一起完成的,在製作的過程中第一次用到input這個東西,發現它可以用來輸入東西去與程式裡的東西氣比較和判斷。</div>
<div></div>
<div>6.<a href="https://youtu.be/1cE-mAhPq6o">final_1影片</a>、<a href="https://youtu.be/Tljmk3ZRmrc">final_影片</a></div>
<div></div>
<div><span>================================================================= </span></div>
<div class="col-md-0" height="1" id="graphics-column" width="1"><strong>期末心得</strong></div>
<div class="col-md-0" height="1" width="1"><strong></strong>在本學期計算機程式的課程我學習到了很多,像是 github倉儲管理、python程式、網站動態編輯還有很多東西,我覺得我學習到最重要的技能有兩個:</div>
<div class="col-md-0" height="1" width="1">1.一個是github倉儲管理,讓我們不用擔心資料不見,並且如果有新組員不需要再去教他,他可以看著我們倉儲之前的版本跟上我們進度。</div>
<div class="col-md-0" height="1" width="1">2.第二個是可以查到自己需要的資料的能力,因為我發現程式的東西不可能全部都學會並背起來,一定是有需要在去查,所以查資料的能力很重要。</div>
<p><!-- ****************************** keyword start -->
<script>
###############################################
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/5d5b274e44ba3400046ad7d104a4c511/raw/a47a4054d2176c2d5b9ec617c078b804d2e89ea2/hw%25201-1"
src = open(url).read()
hw1_1 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["hw1_1"].bind("click", hw1_1.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/748bad2208b682b9670350a061ee10e9/raw/f31c6bb040e3775b1107a6cc68c7dc08c3073e6b/hw%25201-2"
src = open(url).read()
hw1_2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["hw1_2"].bind("click", hw1_2.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/4eccbd34047b3c1a45534746edb56844/raw/a463241ee38da4de2e387ddc5c4837e9aad647e9/gistfile1.txt"
src = open(url).read()
貪食蛇 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["貪食蛇"].bind("click", 貪食蛇.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/8d18ed1cdd15e4668b7c6c60e73f67bf/raw/b7a10cf0dc9f31d3058c023e833c378012bfe1c1/w13"
src = open(url).read()
w13 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w13"].bind("click", w13.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/1ebbd8e6257dfb60182d29e6a9aaff00/raw/463bbe624e68ddb62b6b26a50253afd8def6e8a6/w13-2"
src = open(url).read()
w13_2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w13_2"].bind("click", w13_2.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/4e438641ea1dd0b2bd3ed476df6f020d/raw/09bc6cb4433ab6eb737e4d388ee289f478448312/w13"
src = open(url).read()
w13_3 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w13_3"].bind("click", w13_3.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/d4f132d12c1e443f7ac47d8ef1d60a5a/raw/b4557beb918661a3084fcf9cf001f021f6df15ec/w13-4"
src = open(url).read()
w13_4 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w13_4"].bind("click", w13_4.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/e3e9cfdea42eb4cffd968ffe410153fd/raw/33b0593ac0b11f45cdb72a4c459cdfbf4995d3c9/Python"
src = open(url).read()
w14 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w14"].bind("click", w14.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/5fdbfdecc23d31559952df0e905c4392/raw/7ee9de5468d26f8e77c944c0db83d5e971123cd8/Python"
src = open(url).read()
w14_1 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w14_1"].bind("click", w14_1.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/7430e7cd08724dbd831408fb8ead0f8d/raw/b1ad74f56764adbcfa54b95700d21d98a4e17307/a%25E5%258A%25A0%25E5%2588%25B0b"
src = open(url).read()
w11_0 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w11_0"].bind("click", w11_0.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/805ab4c406844c0c3a2d580b1c27536d/raw/de2ae36b6254313de738312f4bf99eeb475fb68d/Python"
src = open(url).read()
w11 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w11"].bind("click", w11.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/7247096f2bc3c18337b5d8b474b85a57/raw/4493388917baea5f328cbe510c2a5fb5d9be7ac6/Python"
src = open(url).read()
w11_1 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w11_1"].bind("click", w11_1.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/cdd1026309937ac3b15ba7ce8cbfe03f/raw/dbeb217a27b911d6c1dd5ec3f331b1c7a4a81112/Python"
src = open(url).read()
w11_2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w11_2"].bind("click", w11_2.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/8ced0a5bab9bee8205caeac6753542c7/raw/c2fa894204e936ffdef86988ecc36a8d4765cf38/Python"
src = open(url).read()
w11_3 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w11_3"].bind("click", w11_3.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/05e946aae91ba328ff8f9c5f68c43a80/raw/6935071b47e1c2374218f3ad9f1a35974d3b3f80/hw%25203"
src = open(url).read()
snake_t1 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake_t1"].bind("click", snake_t1.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/e567842f0801a52f279db6ca18974a75/raw/eb0c00696096cca0f6cee90b1309153c99242782/hw3"
src = open(url).read()
snake_t2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake_t2"].bind("click", snake_t2.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/2c231487db06969e5fe580bc65174c9c/raw/4fa03c4b5aabe3e8bbf8aba558236f63ca529d60/Python"
src = open(url).read()
snake_berry = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake_berry"].bind("click", snake_berry.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/ad12321f4db355e2ab7887240674903c/raw/eee624024a7e64fef4505963c0a6a3d5c0696351/hw3"
src = open(url).read()
ai_snake = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["ai_snake"].bind("click", ai_snake.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/ddee835b78f036d99e9eadbb428f7fd4/raw/86ff9f4027384d8a5a98f54b22e53780db1c82ad/hw3"
src = open(url).read()
Bsnake = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["Bsnake"].bind("click", Bsnake.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/3dc023cad05e30aa461242646217abac/raw/ed39b01ec04e260fd0f37bd075f9d484248c4181/final_1"
src = open(url).read()
final_1 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final_1"].bind("click", final_1.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/d0eb71ebe0f3447a08904d826a491688/raw/3c015c08226b8c8ea4616040e665f87b257cb0f2/final_2"
src = open(url).read()
final_2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final_2"].bind("click", final_2.prog)
</script>
<script>
############################################### // ]]</p>
</script>
</p>
<h3>41023143</h3>
<p>1.作業一的紅方塊</p>
<p><button id="w11_1">hw1-1</button><button id="hw1_2">hw1-2</button></p>
<p>2.第十三週小考</p>
<p><button id="w13">w13</button><button id="表格">表格</button><button id="生成隨機紅方塊">生成隨機紅方塊</button></p>
<p>3.python習題</p>
<p><button id="w11_4">一加到一百</button><button id="w11">2.6_1</button><button id="w11_0">2.6_2</button><button id="w11_2">2.6_3</button></p>
<p>4.作業三貪食蛇</p>
<p><button id="snake">蛇</button><button id="snake2">蛇2</button><button id="snake3">蛇3</button><button id="snake4">最終蛇</button></p>
<p>5.小遊戲</p>
<p><button id="g1">game1</button></p>
<p>6.期末考試</p>
<p><button id="final_1">final_1</button><button id="final_2">final_2</button></p>
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- for ggame --></p>
<p>
<script src="/static/jquery-3.3.1.min.js"></script>
<script src="/static/jquery-ui.1.12.1.min.js"></script>
<script src="/static/pixi-3.0.5.min.js"></script>
<script src="/static/buzz-1.2.1.js"></script>
<script src="/static/bs.js"></script>
<script src="/downloads/brython_modules.js"></script>
</p>
<p><!-- Cango 程式庫 --></p>
<p>
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/CangoAxes-6v01-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
</p>
<p><!-- for Konva 程式庫 --></p>
<p>
<script src="/static/konva.min.js"></script>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
from browser import html
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
Ace.editor.setValue("""# 導入 sys 模組
import sys
# 導入 keyword 模組
import keyword
def helloWorld():
    print("Hello World!")
helloWorld()
# 利用 sys 模組中的 version_info 印出 Python 版次
print("Python version: ", sys.version_info)
# 利用 keyword 模組中的 kwlist 印出關鍵字
print("Python keywords: ", keyword.kwlist)
""")
Ace.editor.scrollToRow(0)
Ace.editor.gotoLine(0)
# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form>
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<div id="brython_div"></div>
<div class="col-md-0" height="1" id="graphics-column" width="1"></div>
<p><!-- ****************************** keyword start -->
<script type="text/python3">
from browser import document as doc
# 導入位於 static 目錄下的 beditor.py 
import beditor
# 利用 beditor.py 中的 editor 類別建立案例, 對應到 kw1
kw1 = beditor.editor("""# 導入 sys 模組
import sys
# 導入 keyword 模組
import keyword
# 利用 sys 模組中的 version_info 印出 Python 版次
print("Python version: ", sys.version_info)
# 利用 keyword 模組中的 kwlist 印出關鍵字
print("Python keywords: ", keyword.kwlist)
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "keyword" 的按鈕點按時, 執行 kw1 物件中的 prog 方法
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/shih1717/ce74cce738fdace1a88ff8806ea3b880/raw/d86b85e6d36bfafd03e4df755356ec4b26e4de20/hw1-1"
src = open(url).read()
w11_1 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w11_1"].bind("click", w11_1.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/shih1717/a01da39e30f6bdbac933307b8e4b95b9/raw/3e1be90e592a0ed4aa47cce513da63ba52974592/hw1_2"
src = open(url).read()
hw1_2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["hw1_2"].bind("click", hw1_2.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/shih1717/70a60fa595da1dcc1389f3a7e0bc51be/raw/cb5cd6d6ee46cf4e8f38b7e52c08519361c1d115/w13"
src = open(url).read()
w13= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w13"].bind("click", w13.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/shih1717/ce96112451ad6a90edaeb2abb8d6bb00/raw/1315eca0f487446e01150a0f4aa5faf4ec9f9bc6/%25E8%25A1%25A8%25E6%25A0%25BC"
src = open(url).read()
表格= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["表格"].bind("click", 表格.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/shih1717/27398b10041779e3dfee7b18becb3049/raw/9a0d552bd6f1201f3ce1d58bd9f8f6b7ceac5a12/%25E9%259A%25A8%25E6%25A9%259F%25E8%25A1%25A8%25E6%25A0%25BC"
src = open(url).read()
生成隨機紅方塊= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["生成隨機紅方塊"].bind("click", 生成隨機紅方塊.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/shih1717/713dbd04bc22f3dc9efd8c9375898084/raw/40e50b1d51d1c70e6cca5c3102b42cb98d66945e/1add100"
src = open(url).read()
w11_4= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w11_4"].bind("click", w11_4.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/shih1717/202498919b6345795bca595a716bb820/raw/bfaa702dc4871553b9794d844d1e7be77cb91eb7/26_1"
src = open(url).read()
w11= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w11"].bind("click", w11.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/shih1717/02cb189ccdd6c31f7e3cbbb000563ddc/raw/67a061f3cfbac699cb945990b8fd8626694f1046/w13-2"
src = open(url).read()
w11_0 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w11_0"].bind("click", w11_0.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/shih1717/5d9364fbc8cb19bb21b738a079099276/raw/14790642a1ab135444a2e6a0bb4d60eb8880f7c2/w13-3"
src = open(url).read()
w11_2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w11_2"].bind("click", w11_2.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/shih1717/5c53ffca88ec4e02ef4d6f24888d55b3/raw/91d74559af3c79f660ca2cbcff610506fb32c19b/snake"
src = open(url).read()
snake = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake"].bind("click",snake.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/shih1717/42df0320bb026642c2b1721bc4a8b329/raw/5af187d8ef6525ffe23c0ee63504c557d274f2bd/snake2"
src = open(url).read()
snake2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake2"].bind("click",snake2.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/shih1717/c98b311b1acf2f93668e7fc0b06d708e/raw/1b3bf7812ec78c3b0060ddb0ce2331f090225b70/snake3"
src = open(url).read()
snake3 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake3"].bind("click",snake3.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/shih1717/25d3b634ec753366f9039011eb335bd1/raw/6713eefeeb8f8a7d7ed9f9a0e0201f4ee206be2c/snake%2520max"
src = open(url).read()
snake4 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake4"].bind("click",snake4.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/shih1717/f142867eb49abd541b496bc75a6c1442/raw/163f3e9954747a9ddcffa10f3cf1e2240a0e3b96/game1"
src = open(url).read()
g1 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["g1"].bind("click",g1.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/shih1717/a0223dff4fb1e6f818309d7e450c78fd/raw/8a25d20877d4bebdda6f74c857f40678254a2b9c/final_1"
src = open(url).read()
final_1= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final_1"].bind("click",final_1.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/shih1717/057e15e3e9ec718a04742d9f2012af8a/raw/22a52c38a0971f73bb9d9563c6bfcb1a87b068a2/final_2"
src = open(url).read()
final_2= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final_2"].bind("click",final_2.prog)
</script>
</p>
<h2>1ag2</h2><h3>41023104</h3>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">add 1 to 100</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="w13">w13</button><button id="BSnake">BSnake</button><button id="final1">final1</button><button id="final2">final2</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################# w13 start
w13_url = "https://gist.githubusercontent.com/CHIA-ROU/11b2ba032bd450c7e65104c1e04407b1/raw/778fbe96ede5a3c7300ffda23d03664891d10d1d/gistfile2.txt"
w13 = button2(w13_url)
doc["w13"].bind('click', w13.do)
################################## w13 end
################################# BSnake start
BSnake_url = "https://gist.githubusercontent.com/CHIA-ROU/11b2ba032bd450c7e65104c1e04407b1/raw/be29db08f8143a8289dc28bad92a19450421ec70/BSnake"
BSnake = button2(BSnake_url)
doc["BSnake"].bind('click', BSnake.do)
################################## BSnake end
################################# final1 start
final1_url = "https://gist.githubusercontent.com/CHIA-ROU/093b4172d86b22a6c0e6e93cd7950cb2/raw/615d004f659647d76ea902bd75933405c888aa62/Final_1"
final1 = button2(final1_url)
doc["final1"].bind('click', final1.do)
################################## final1 end
################################# final2 start
final2_url = "https://gist.githubusercontent.com/CHIA-ROU/feaac6bfc0b5cb645ff5cd1cd95348cd/raw/c19898eda0f20b403f34faca76e8fab0e1a9965f/Final_2"
final2 = button2(final2_url)
doc["final2"].bind('click', final2.do)
################################## final2 end
</script>
</p>
<h3>41023103</h3>
<p><span>第一題請利用 Brython 在個人期末報告頁面中新增一個按鈕, 標題為 final1, 點擊後可以執行個人 gist 中的程式, 並且在頁面下方的 x 與 y 方向, 畫出 15 x 15 條方格線, 且線寬 1 pixel, 每一方格長寬分別為 50 Pixels. </span></p>
<p><span>第二題為延伸第一個題目, 額外新增另一個按鈕, 標題為 final2, 請在上述方格中, 加入一個大小為 45 x 45 pixels 的綠色方塊, 可以沿著格線區最外圍, 從 (1, 1) 方格座標區開始, 重複進行 U 字形運動, 即該方塊由上往下運動至最下方後, 右轉至最右方後, 往上移動至上方後反轉, 並且重複進行相同運動.</span></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">add 1 to 100</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="W13">W13</button><button id="BSnake">BSnake</button><button id="final1">final1</button><button id="final2">final2</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################# W13 start 
W13_url = "https://gist.githubusercontent.com/ro731/3cf0d816720fc5ff5b3e198a296706e4/raw/1a4c1854571d20ee9bd76a7988c2aec97f78710d/gistfile2.txt"
W13 = button2(W13_url)
doc["W13"].bind('click', W13.do)
################################## W13 end
################################# BSnake start 
BSnake_url = "https://gist.githubusercontent.com/ro731/3cf0d816720fc5ff5b3e198a296706e4/raw/59dcf5b8b7a1923f5b285934e4aa274f479043ea/gistfile3.txt"
BSnake = button2(BSnake_url)
doc["BSnake"].bind('click', BSnake.do)
################################## BSnake end
################################# final1 start 
final1_url = "https://gist.githubusercontent.com/ro731/3cf0d816720fc5ff5b3e198a296706e4/raw/42f0a320884892f505e143095b8a4040a91c7162/gistfile4.txt"
final1 = button2(final1_url)
doc["final1"].bind('click', final1.do)
################################## final1 end
################################# final2 start 
final2_url = "https://gist.githubusercontent.com/ro731/3cf0d816720fc5ff5b3e198a296706e4/raw/f4fcb131d73e692b523e3932ea4614fdb2cd68b3/gistfile5.txt"
final2 = button2(final2_url)
doc["final2"].bind('click', final2.do)
################################## final2 end
</script>
</p>
<h2>1ag3</h2><h3>41023130</h3>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/e896a4705a95ac8cc4147b355b0e87ef/raw/8954b8280c524c5781dc3c0b3565bc489d3aa3a3/cango_gear1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023130/a9167d068e53f626da00e60718e7cf7f/raw/025a5d3ff9bb344d510795d284e929f5405beb8b/final2"
src = open(url).read()
final2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final2"].bind("click", final2.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023130/d9f4a7951c4f9141761eefc915ff1cc1/raw/eda4f62850908a11bdd6c26dd3767e0b725436ef/final1"
src = open(url).read()
final1 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final1"].bind("click", final1.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023130/3043debca95780dcac1ff30178269448/raw/da14ec12cb7dd8ca5267891b792c48f39dd121ef/%25E8%2587%25AA%25E5%258B%2595%25E8%25B2%25AA%25E5%2590%2583%25E8%259B%2587"
src = open(url).read()
自動貪食蛇= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["自動貪食蛇"].bind("click", 自動貪食蛇.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023130/37824cfa849b2475d4f02ee3b72037ca/raw/96d4310055bec2dc184cbf499eace0f170c15a76/w13%25E6%258C%2589%25E9%2588%2595"
src = open(url).read()
w13按鈕= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w13按鈕"].bind("click", w13按鈕.prog)
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><button id="final1">final1</button><button id="final2">final2</button></p>
<p><button id="自動貪食蛇">自動貪食蛇</button></p>
<p><button id="w13按鈕">w13按鈕</button></p>
<!-- 執行與清除按鈕結束 -->
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 -->
<div id="brython_div"></div>
<!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
<h3>41023125</h3>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/41023125/df56e6bee91ebe39d7dcd45638e26cbc/raw/ef73b7a2125a32cd5bce92da8e6311d4748b8e32/w13%25E6%25B8%25AC%25E9%25A9%2597"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

check_strq_url = "https://gist.githubusercontent.com/41023125/df56e6bee91ebe39d7dcd45638e26cbc/raw/ef73b7a2125a32cd5bce92da8e6311d4748b8e32/w13%25E6%25B8%25AC%25E9%25A9%2597"
# 從 gist 取得程式碼
check_srcq = open(check_strq_url).read()

def checkq_input(ev):
    Ace.editor.setValue(check_srcq)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    #Ace.run()

# id 為 "add1to10" 的按鈕點按時, 執行 check_input 方法
doc["add1to10"].bind('click', checkq_input)

chec_qwe_url = "https://gist.githubusercontent.com/41023125/fbaa4f6f9943f1817179f20432ea792d/raw/33de74fbdab63d86350ac39ae9395272f7d6572e/w13-1%25E5%25BB%25B6%25E4%25BC%25B8"
# 從 gist 取得程式碼
chec_wq = open(chec_qwe_url).read()

def chec_inp(ev):
    Ace.editor.setValue(chec_wq)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    #Ace.run()

# id 為 "asd" 的按鈕點按時, 執行 chec_inp 方法
doc["asd"].bind('click', chec_inp)

zxc_url = "https://gist.githubusercontent.com/41023125/2394d5b1b40ca7de736eeebcf079dea6/raw/9bc4b47942a2e811d89d14c6155eb54593e9971d/w13-1%25E5%25BB%25B6%25E4%25BC%25B8"
# 從 gist 取得程式碼
check_zxc= open(zxc_url).read()

def zxc_input(ev):
    Ace.editor.setValue(check_zxc)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    #Ace.run()

# id 為 "zxc" 的按鈕點按時, 執行 zxc_input 方法
doc["zxc"].bind('click', zxc_input)

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023125/1fdd74f7a5c1eddb2acdbac594b52bd2/raw/5abc9815e3d49e2a152499ac9e88ad945a5371f7/hw3"
src = open(url).read()
w13 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w13"].bind("click", w13.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023125/593b353c7d2c549c6d45a0f3e908dd3b/raw/31b3bea7e9364b612ca3e358bb7ed26ac14c40db/%25E8%2587%25AA%25E8%25A3%25BD%25E5%25B0%2584%25E6%2593%258A%25E9%2581%258A%25E6%2588%25B2"
src = open(url).read()
selfgame = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["selfgame"].bind("click",selfgame.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023125/0ea70a5f5ba83f806e102d91f4e14a7c/raw/3ecf01d5caba40b7e52094a5663a263110d8f3ba/final1"
src = open(url).read()
final1 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final1"].bind("click",final1.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023125/f1458940c2aba9a4655a6e217c23717a/raw/47031489287e2f879960fed8972a453aaf5e165a/final2-2"
src = open(url).read()
final22 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final22"].bind("click",final22.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023125/0495389a86d42dc904bcbf671f757549/raw/aa9dc5f96b14fe01dcb661a22037354f768c89b0/final2"
src = open(url).read()
final2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final2"].bind("click",final2.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023125/530041f4ea94786750d5a903985931d6/raw/0e38d8829e12c44a33a53ae2938a04494b4a57bc/final2-3"
src = open(url).read()
final23 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final23"].bind("click",final23.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023125/ea030f3fc0e91579a4b375964d8cfa21/raw/85518500fa6c188d8e90aa623f0320469cae4880/final3"
src = open(url).read()
final3 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final3"].bind("click",final3.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023125/79be5f8f9b111ca84688cdf0de08b4f2/raw/d6d2d6a069da1182c737469a11572b819ae80da3/final3-2"
src = open(url).read()
final32 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final32"].bind("click",final32.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023125/12fe7955fa849898f566434e1ab09917/raw/3fb1f285d60fa55e8a946fda857fcab59d19353e/final2-4"
src = open(url).read()
final24 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final24"].bind("click",final24.prog)
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><button id="add1to10">列出10個座標</button> <button id="asd">在方格上標出10個座標</button> <button id="zxc">方塊隨機出現</button> <button id="w13">snake</button></p>
<p><button id="selfgame">戰機遊戲</button></p>
<p><button id="final1">final1</button> <button id="final2">final2</button> <button id="final22">final2-2</button> <button id="final23">final2-3</button> <button id="final24">final2-4</button></p>
<p><button id="final3">final3</button> <button id="final32">final3-2</button></p>
<!-- 執行與清除按鈕結束 -->
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 -->
<div id="brython_div"></div>
<p><span style="color: #000000;"><a href="https://www.youtube.com/playlist?list=PLgrxSD1DX5E3HRzkN55oyZVaTvB36EbZV" style="color: #000000;">final製作全過程 - YouTube</a></span></p>
<h3>41023124</h3>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- for ggame -->
<p>
<script src="/static/jquery-3.3.1.min.js"></script>
<script src="/static/jquery-ui.1.12.1.min.js"></script>
<script src="/static/pixi-3.0.5.min.js"></script>
<script src="/static/buzz-1.2.1.js"></script>
<script src="/static/bs.js"></script>
<script src="/downloads/brython_modules.js"></script>
</p>
<!-- Cango 程式庫 -->
<p>
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/CangoAxes-6v01-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
</p>
<!-- for Konva 程式庫 -->
<p>
<script src="/static/konva.min.js"></script>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
from browser import html
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
Ace.editor.setValue("""

""")
Ace.editor.scrollToRow(0)
Ace.editor.gotoLine(0)
# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form>
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button> <button id="clear_bd">清除繪圖區</button> <button onclick="window.location.reload()">Reload</button></p>
<p><button id="w13">HW1-1</button> <button id="keyword">HW1-2</button></p>
<p><button id="asd">manual_snake</button> <button id="zxc">auto snake</button> <button id="qwe">ai snake</button></p>
<p><button id="qaz">exam-1</button> <button id="wsx">exam-2</button> <button id="edc">exam-3</button></p>
<p><button id="qqq">小遊戲</button></p>
<p><button id="www">final1</button> <button id="ccc">final2</button></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<div id="brython_div"></div>
<div class="col-md-0" height="1" id="graphics-column" width="1"></div>
<p><!-- ****************************** keyword start -->
<script type="text/python3">
from browser import document as doc
# 導入位於 static 目錄下的 beditor.py 
import beditor
# 利用 beditor.py 中的 editor 類別建立案例, 對應到 kw1
kw1 = beditor.editor("""from browser import html
from browser import document as doc
from browser import timer

canvas = html.CANVAS(width = 400, height = 100)
canvas.id = "game-board3"
brython_div = doc["brython_div"]
brython_div <= canvas
brython_div <= html.BUTTON("啟動", id="power")
ctx = canvas.getContext("2d")
px = 0
py = 50
width = 20
height = 20
speedx = 2
speedy = 2

def cube():
    global px, py, width, height, speedx, speedy
    ctx.clearRect(px, py, width, height)
    ctx.fillStyle = "red"
    px += speedx
    if px > 200 :
        speedx = 0
        py += speedy
    if py < 0 or (py + height) > canvas.height:
        speedy = -speedy
    ctx.fillRect(px, py, width, height)

cube()

game = None

def gametion(ev) :
    global game
    if game is None :
        game = timer.set_interval(cube, 10)
        doc['power'].text = '暫停'
    elif game == 'hold':
        game = timer.set_interval(cube, 10)
        doc['power'].text = '暫停'
    else:
        timer.clear_interval(game)
        game = 'hold'
        doc['power'].text = '繼續'
doc["power"].bind("click", gametion)

""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "keyword" 的按鈕點按時, 執行 kw1 物件中的 prog 方法
doc["keyword"].bind('click', kw1.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/05bcce70d88b2c1828f9b33fc011204d/raw/2f392d2281bc576ce01c1d5210d7008eb0fdd08d/hw1"
src = open(url).read()
w13 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w13"].bind("click", w13.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/9845fb1910f117094b64a707cee3c05c/raw/d2f4ea384f502805c9163cc380d43b4089439c4b/manual_snake"
src = open(url).read()
asd = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["asd"].bind("click", asd.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/1f9731b7e87aa6ce14561d9a5f4be27a/raw/fe593577b949d96c5fd239b04f207fc8bdb6fb55/auto%2520snake"
src = open(url).read()
zxc = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["zxc"].bind("click", zxc.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/5f4c4c0098635c2e7c43722636893537/raw/dc20cadf1665952b0fda21af25f5a4184886b5b7/my%2520ai%2520snake"
src = open(url).read()
qwe = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["qwe"].bind("click", qwe.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/c1ad0e2e3fea8f8b9040261abd74739b/raw/1be65b25dc95161f1077725dc234aafa409945c9/exam"
src = open(url).read()
qaz = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["qaz"].bind("click", qaz.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/86214f53b8658b3a3964b8f69d37c479/raw/c1de81dd257ddcd4bbda468b164e7a30b1381766/exam-2"
src = open(url).read()
wsx = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["wsx"].bind("click", wsx.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/f2064f8f36f587550eab382e07091040/raw/211ce95f5122cdf86f0b4a6c6e226a11fec1cf0a/exam-3"
src = open(url).read()
edc = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["edc"].bind("click", edc.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/ddef8c5fb3f6d1672fdc12d32a1c53e6/raw/821a3ee83b84efd429111bed2ce2f3f7fea71ac5/%25E5%25B0%258F%25E9%2581%258A%25E6%2588%25B2"
src = open(url).read()
qqq= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["qqq"].bind("click", qqq.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/7b4f1bd6e118313989750e284061a4b5/raw/93181fd6bfdef2812f601f218b43acf45f3f4a23/final1"
src = open(url).read()
www= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["www"].bind("click", www.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/de72498b680ece22ce405f3ea229fb1f/raw/824e6f1345e190b112f686f3f2fcdfb82f076510/final2"
src = open(url).read()
ccc= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["ccc"].bind("click", ccc.prog)
</script>
</p>
<p>final 1 影片 : <a href="https://www.youtube.com/watch?v=amfdPQ04UjA&amp;ab_channel=%E5%B0%8F%E8%83%96%E4%BB%94">https://www.youtube.com/watch?v=amfdPQ04UjA&amp;ab_channel=%E5%B0%8F%E8%83%96%E4%BB%94 </a></p>
<p>final 2 影片 : <a href="https://www.youtube.com/watch?v=U8Je0fkZEz0&amp;ab_channel=%E5%B0%8F%E8%83%96%E4%BB%94">https://www.youtube.com/watch?v=U8Je0fkZEz0&amp;ab_channel=%E5%B0%8F%E8%83%96%E4%BB%94 </a></p>
<p>final製作心得 : 一開始的15x15方格編寫很容易，但一開始在製作final2的功課時，在小綠點跑的時候會有之前的路徑，在覆蓋方格時卡了一下，但後來就修正了，小綠點可以正常的跑動，但在回程時，因為事前沒有先編寫兩道分支，所以在小綠點的回程編寫上，又卡了一小段時間，再重新修正後，小綠點也就能正常地來呈U字形來回跑動了。</p>
<p>期末心得 : 剛開始接觸計算機程式跟C++一樣，遇到了很多新奇的電腦語言，但學計算機這門課與C++的不同之處就是可以真正學到如何架設自己的網站，並且持續的更新它，從一開始需要看老師的影片一步一步慢慢做還會做錯，到現在可以直接編寫成長了很多，雖然還是有很多不太了解的東西需要認識，但是我認真覺得學習計算機程式這堂課非常的值得。</p>
<h3>41023122</h3>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/41023122/3450f4c2e162803746f1aa1a6a9f1be1/raw/69a8a832a7841146450444f20271b0c6de507080/hw1-1"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()
# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)

#0000000000000000000000000000000000000000000000000000000000000000000
aaa_qwe_url = "https://gist.githubusercontent.com/41023122/3450f4c2e162803746f1aa1a6a9f1be1/raw/69a8a832a7841146450444f20271b0c6de507080/hw1-1"
# 從 gist 取得程式碼
aaa_wq = open(aaa_qwe_url).read()

def aaa_inp(ev):
     Ace.editor.setValue(aaa_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()

# id 為 "asd" 的按鈕點按時, 執行 chec_inp 方法
doc["aaa"].bind('click', aaa_inp)

#0000000000000000000000000000000000000000000000000000000000
bbb_qwe_url = "https://gist.githubusercontent.com/41023122/c019b7a738aa6bc884fa2286c4511057/raw/179a588d7d71d02baa6fad8f35af2221f7f303f4/W13"
# 從 gist 取得程式碼
bbb_wq = open(bbb_qwe_url).read()

def bbb_inp(ev):
     Ace.editor.setValue(bbb_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()

# id 為 "asd" 的按鈕點按時, 執行 chec_inp 方法
doc["bbb"].bind('click', bbb_inp)

#0000000000000000000000000000000000000000000000000000000000000
ccc_qwe_url = "https://gist.githubusercontent.com/41023122/46985a51a5192247597d4ca779bb64eb/raw/88d561d0a6b67ddedc846ba7749752cc4079c4c3/gistfile1.txt"
# 從 gist 取得程式碼
ccc_wq = open(ccc_qwe_url).read()

def ccc_inp(ev):
     Ace.editor.setValue(ccc_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()

# id 為 "asd" 的按鈕點按時, 執行 chec_inp 方法
doc["ccc"].bind('click', ccc_inp)

#0000000000000000000000000000000000000000000000000000000000000
a1_qwe_url = "https://gist.githubusercontent.com/41023122/471b1f4b5ae81bbe0d8fb31fcdfdb375/raw/ed0f5599bb656775fd6c0ae8a7a5264034cd62c0/gistfile1.txt"
# 從 gist 取得程式碼
a1_wq = open(a1_qwe_url).read()

def a1_inp(ev):
     Ace.editor.setValue(a1_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()

# id 為 "asd" 的按鈕點按時, 執行 chec_inp 方法
doc["a1"].bind('click', a1_inp)

#0000000000000000000000000000000000000000000000000000000000000
a2_qwe_url = "https://gist.githubusercontent.com/41023122/72a6d4a40cfd2d212f8b104e8345a1f9/raw/817d6ec52e7770e108216843ac4162da248fceed/gistfile1.txt"
# 從 gist 取得程式碼
a2_wq = open(a2_qwe_url).read()

def a2_inp(ev):
     Ace.editor.setValue(a2_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()

# id 為 "asd" 的按鈕點按時, 執行 chec_inp 方法
doc["a2"].bind('click', a2_inp)

#0000000000000000000000000000000000000000000000000000000000000
b1_qwe_url = "https://gist.githubusercontent.com/41023122/9a7a48194ed28bb08854731a4db68e21/raw/1d8045be5623e184c095d2aee0874d9e57bc580d/gistfile1.txt"
# 從 gist 取得程式碼
b1_wq = open(b1_qwe_url).read()

def b1_inp(ev):
     Ace.editor.setValue(b1_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()

# id 為 "asd" 的按鈕點按時, 執行 chec_inp 方法
doc["b1"].bind('click', b1_inp)

#0000000000000000000000000000000000000000000000000000000000000
b2_qwe_url = "https://gist.githubusercontent.com/41023122/b4209519455416256b58439e7e5c364b/raw/cd103a700efb97ab829ca60701f1cdae60db5a35/gistfile1.txt"
# 從 gist 取得程式碼
b2_wq = open(b2_qwe_url).read()

def b2_inp(ev):
     Ace.editor.setValue(b2_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()

# id 為 "asd" 的按鈕點按時, 執行 chec_inp 方法
doc["b2"].bind('click', b2_inp)

#0000000000000000000000000000000000000000000000000000000000000
# 呼叫函式執行
run()
#1111111111111111111111111111111111111111111111111111
</script>
上課內容有<button id="aaa">紅點</button> ,<button id="bbb">座標 </button> , <button id="ccc">snake</button></p>
<p>期末考:<button id="a1">final1</button> <button id="a2">final2</button> 而<button id="b1">失敗1</button> <button id="b2">失敗2</button></p>
<p>是剛開始的想法 1.是希望設定隱形的點讓蛇追 2.是利用位移來跑,但背景都被吃掉了</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form><label>Filename: <input id="kw_filename" placeholder="輸入文件名" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><button id="asd">按鈕名字</button></p>
<!-- 執行與清除按鈕結束 -->
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 -->
<div id="brython_div"></div>
<!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
<h3>41023120</h3>
<p><button id="asd">列出十個座標</button><button id="snake">snake</button><button id="rad">HW1-1</button><button id="autosnake">autosnake</button> <button id="HW">HW1-2</button> <button id="test">Final1</button> <button id="test2">Final2</button> <!-- 導入 brython 程式庫 --></p>
<p>
<script src="/static/brython.js">
</script>
<script src="/static/brython_stdlib.js"></script>
</p>
<p><!-- 啟動 Brython --></p>
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/e896a4705a95ac8cc4147b355b0e87ef/raw/8954b8280c524c5781dc3c0b3565bc489d3aa3a3/cango_gear1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)


chec_qwe_url = "https://gist.githubusercontent.com/41023120/c1d0cb51ede9518bc4887e7d97b58680/raw/9b30331721455968156149ca0cd98231b1c43e45/gistfile1.txt"
# 從 gist 取得程式碼
chec_wq = open(chec_qwe_url).read()
def chec_inp(ev):
     Ace.editor.setValue(chec_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()
# id 為 "asd" 的按鈕點按時, 執行 chec_inp 方法
doc["asd"].bind('click', chec_inp)

snake_qwe_url = "https://gist.githubusercontent.com/41023120/908f147fed690c31b0e4d2d41ceaec6f/raw/f72de4e77920e37bb5e69854af04dc2775dd30f2/snake%25E6%2589%258B"
# 從 gist 取得程式碼
snake_wq = open(snake_qwe_url).read()
def snake_inp(ev):
     Ace.editor.setValue(snake_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()
# id 為 "asd" 的按鈕點按時, 執行 chec_inp 方法
doc["snake"].bind('click', snake_inp)

rad_qwe_url = "https://gist.githubusercontent.com/41023120/230d0bd4c32738ad4009a1dc5e2ab177/raw/82da21c0b1e002fbcce9e48424e104ab2a8188d4/gistfile1.txt"
# 從 gist 取得程式碼
rad_wq = open(rad_qwe_url).read()
def rad_inp(ev):
     Ace.editor.setValue(rad_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()
# id 為 "asd" 的按鈕點按時, 執行 chec_inp 方法
doc["rad"].bind('click', rad_inp)

autosnake_qwe_url = "https://gist.githubusercontent.com/41023120/e921e900d179c071fd7a2db28e640087/raw/14b0c49e58ec3e21eb69cd75b81decd39b88988e/%25E6%259A%25AB%25E5%2581%259C%25E9%258D%25B5"
# 從 gist 取得程式碼
autosnake_wq = open(autosnake_qwe_url).read()
def autosnake_inp(ev):
     Ace.editor.setValue(autosnake_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()
# id 為 "asd" 的按鈕點按時, 執行 chec_inp 方法
doc["autosnake"].bind('click', autosnake_inp)
HW_qwe_url = "https://gist.githubusercontent.com/41023120/1c01d50fe33a0041c06851e9a1e84be4/raw/7538ff51d42da3a4afc6df92e2ae92ccf8796307/gistfile1.txt"
# 從 gist 取得程式碼
HW_wq = open(HW_qwe_url).read()
def HW_inp(ev):
     Ace.editor.setValue(HW_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()
# id 為 "asd" 的按鈕點按時, 執行 chec_inp 方法
doc["HW"].bind('click', HW_inp)
test_qwe_url = "https://gist.githubusercontent.com/41023120/0b193042c198425797bcb8f059812d5a/raw/7e6ab585a7a861e5d7273ebde99fe8b941a627d7/%25E8%2580%2583%25E8%25A9%25A61"
# 從 gist 取得程式碼
test_wq = open(test_qwe_url).read()
def test_inp(ev):
     Ace.editor.setValue(test_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()
# id 為 "asd" 的按鈕點按時, 執行 chec_inp 方法
doc["test"].bind('click', test_inp)

test2_qwe_url = "https://gist.githubusercontent.com/41023120/8b239d26614ef6faa6d54d3b33bb21b9/raw/25b49e54d388450f61a56385872bea3c8eeeb876/test2"
# 從 gist 取得程式碼
test2_wq = open(test2_qwe_url).read()
def test2_inp(ev):
     Ace.editor.setValue(test2_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()
# id 為 "asd" 的按鈕點按時, 執行 chec_inp 方法
doc["test2"].bind('click', test2_inp)


# 呼叫函式執行
run()
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<div id="brython_div"></div>
<div></div>
<div></div>
<div></div>
<div></div>
<div></div>
<div>Final1:<span><a href="https://stream.new/v/02oKn8RG1UttpJCSjFDAnjr3tm9ca5fLC5dpeL89KCjA">https://stream.new/v/02oKn8RG1UttpJCSjFDAnjr3tm9ca5fLC5dpeL89KCjA</a></span></div>
<div>Final2:<span><a href="https://stream.new/v/L8hnF9hv01Vzk7WNq37KTm00l01ZfH011Cnl2wXIyG4bkVM">https://stream.new/v/L8hnF9hv01Vzk7WNq37KTm00l01ZfH011Cnl2wXIyG4bkVM</a></span></div>
<div><span></span></div>
<div></div>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --></p>
<p>
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<h3>41023119</h3>
<p><button id="w13">列出 10 個座標</button><button id="asd">方格中列出 10 個座標</button><button id="qwe">隨機方格</button><button id="zxc">真隨機方格</button><button id="final">final 1</button><button id="final2">final2</button><button id="snake">snake</button><button id="bsnake">bsnake</button><button id="hw1_1">hw1-1</button><button id="hw1_2">hw1-2</button></p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- for ggame -->
<p>
<script src="/static/jquery-3.3.1.min.js"></script>
<script src="/static/jquery-ui.1.12.1.min.js"></script>
<script src="/static/pixi-3.0.5.min.js"></script>
<script src="/static/buzz-1.2.1.js"></script>
<script src="/static/bs.js"></script>
<script src="/downloads/brython_modules.js"></script>
</p>
<!-- Cango 程式庫 -->
<p>
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/CangoAxes-6v01-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
</p>
<!-- for Konva 程式庫 -->
<p>
<script src="/static/konva.min.js"></script>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
from browser import html
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
Ace.editor.setValue("""# 導入 sys 模組
import sys
# 導入 keyword 模組
import keyword
def helloWorld():
    print("Hello World!")
helloWorld()
# 利用 sys 模組中的 version_info 印出 Python 版次
print("Python version: ", sys.version_info)
# 利用 keyword 模組中的 kwlist 印出關鍵字
print("Python keywords: ", keyword.kwlist)
""")
Ace.editor.scrollToRow(0)
Ace.editor.gotoLine(0)
# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form>
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button><button id="keyword">Keyword</button></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<div id="brython_div"></div>
<div class="col-md-0" height="1" id="graphics-column" width="1">============================================</div>
<div class="col-md-0" height="1" width="1">1.倉儲的建立要透過老師的影片看好幾次跟詢問許多同學才會建立。</div>
<div class="col-md-0" height="1" width="1">2.HW1因為<span>第一次接觸到python，一開始完全看不懂，後來詢問同學及參考資料才做出來。</span></div>
<div class="col-md-0" height="1" width="1"><span>3.W13學會了random的用法，並參考老師的畫格子把第二部分做出來，而第三部分的隨機格子透過函式的運用也做來了。</span></div>
<div class="col-md-0" height="1" width="1"><span>4.HW3的snake改編老師的貪食蛇做出來的，目前最高紀錄111分，蛇身到一定程度會把自己截斷，程式還須改進，而老師後來給的Bsnale還在研究中。</span></div>
<div class="col-md-0" height="1" width="1"><span></span></div>
<div class="col-md-0" height="1" width="1"></div>
<div class="col-md-0" height="1" width="1"></div>
<p><!-- ****************************** keyword start -->
<script type="text/python3">
from browser import document as doc
# 導入位於 static 目錄下的 beditor.py 
import beditor
# 利用 beditor.py 中的 editor 類別建立案例, 對應到 kw1
kw1 = beditor.editor("""# 導入 sys 模組
import sys
# 導入 keyword 模組
import keyword
# 利用 sys 模組中的 version_info 印出 Python 版次
print("Python version: ", sys.version_info)
# 利用 keyword 模組中的 kwlist 印出關鍵字
print("Python keywords: ", keyword.kwlist)
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "keyword" 的按鈕點按時, 執行 kw1 物件中的 prog 方法
doc["keyword"].bind('click', kw1.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Lujay030/e44697e2d85f2e371388a0d3cb019bc9/raw/cf40f9ae33966d2187487a596f160c6415695eda/w13%2520exam"
src = open(url).read()
w13 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w13"].bind("click", w13.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Lujay030/3aa43293d6d23ecbb75590d0eedcc931/raw/1a350cab1329099f38e02da4dbdabf76f6b7b8f0/%25E7%2595%25AB%25E6%25A0%25BC%25E5%25AD%2590"
src = open(url).read()
asd = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["asd"].bind("click", asd.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Lujay030/7eec3e51ba45b854d2d36b303cb583de/raw/aeab3ff83a7cf3da28c7dacc83e4986d7fc03ea4/final%25201"
src = open(url).read()
final = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final"].bind("click", final.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Lujay030/da77abb1c172fce177ad5d3d068345bc/raw/72aa06f9e615476a209b4b410d627bd2f9bcd60b/final%25202"
src = open(url).read()
final2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final2"].bind("click", final2.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Lujay030/8ed01b36baca529bcfec5cf1b25cdf48/raw/056b6a2ad9bbd09fa677bf2c434110a78d60d862/snake%2520part2"
src = open(url).read()
snake = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake"].bind("click", snake.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Lujay030/5763a891c056accf7a30849257ae6aeb/raw/f0a4c502f378174a6b0e7933f5d93b7448b6002f/hw1"
src = open(url).read()
hw1_1 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["hw1_1"].bind("click", hw1_1.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Lujay030/ccfe1103961e522aed4121eb8920b622/raw/fc86ab4991a65e0cc2cb1f4e272c5638700ce33b/hw1-2"
src = open(url).read()
hw1_2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["hw1_2"].bind("click", hw1_2.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Lujay030/2c207105d00e15d24fcb5e3cdb7c415e/raw/dd3d0be5047948a35273caeaac42361649821aa6/bsnake"
src = open(url).read()
bsnake = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["bsnake"].bind("click", bsnake.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Lujay030/6051e93ae902f1bcb263710bf4d3aa09/raw/e738844c9b3c7a8bc8244da2043944b6aa509311/w13%2520%25E5%25BB%25B6%25E4%25BC%25B8"
src = open(url).read()
qwe= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["qwe"].bind("click", qwe.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/Lujay030/8049df72e24ee68e8f3090660eca18f8/raw/f5f1772d2282eeb61e6b19670cf95135061d234a/w13%2520plas"
src = open(url).read()
zxc = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["zxc"].bind("click", zxc.prog)
</script>
</p>
<h3>41023118</h3>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/e896a4705a95ac8cc4147b355b0e87ef/raw/8954b8280c524c5781dc3c0b3565bc489d3aa3a3/cango_gear1.py "
    prog = open(url).read()


    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()
hw11_qwe_url = "https://gist.githubusercontent.com/41023118/b309efcf4f6e2cb54ab4aade0f782d80/raw/75ccbc0e334e0ae26d075a7cee58a4fee8d5bd35/hw1"
# 從 gist 取得程式碼
hw11_wq = open(hw11_qwe_url).read()

def hw11_inp(ev):
     Ace.editor.setValue(hw11_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()

# id 為 "hw11" 的按鈕點按時, 執行 chec_inp 方法
doc["hw1-1"].bind('click', hw11_inp)

hw12_qwe_url = "https://gist.githubusercontent.com/41023118/4c1637d061961af25884b46983b86a2a/raw/b921609d1008c10675bb0cc15285ef6846f0408f/hw2"
# 從 gist 取得程式碼
hw12_wq = open(hw12_qwe_url).read()

def hw12_inp(ev):
     Ace.editor.setValue(hw12_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()

# id 為 "hw1-2" 的按鈕點按時, 執行 hw1-2_inp 方法
doc["hw1-2"].bind('click', hw12_inp)

w13_qwe_url = "https://gist.githubusercontent.com/41023118/96eb543b04066ebd7b48de3940676db6/raw/96e2daad99fdc53de71142a5014d07e4afc70218/w13"
# 從 gist 取得程式碼
w13_wq = open(w13_qwe_url).read()

def w13_inp(ev):
     Ace.editor.setValue(w13_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()

# id 為 "w13" 的按鈕點按時, 執行 w13_inp 方法
doc["w13"].bind('click', w13_inp)

final1_qwe_url = "https://gist.githubusercontent.com/41023118/d2fe8f3fd445b69af08ff0781673a246/raw/8b55554d772d99dc63718d21d3da645c79228757/final1"
 # 從 gist 取得程式碼
final1_wq = open(final1_qwe_url).read()

def final1_inp(ev):
     Ace.editor.setValue(final1_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()

# id 為 "final1" 的按鈕點按時, 執行 final1_inp 方法
doc["final1"].bind('click', final1_inp)

final2_qwe_url = "https://gist.githubusercontent.com/41023118/1a1b0fad8fdc05a257e3c4c46fd61dde/raw/30c64c73c8dcb2608dc3655a30d60b0c4a3d391c/final2"
 # 從 gist 取得程式碼
final2_wq = open(final2_qwe_url).read()

def final2_inp(ev):
     Ace.editor.setValue(final2_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()

# id 為 "final2" 的按鈕點按時, 執行 final2_inp 方法
doc["final2"].bind('click', final2_inp)

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><button id="hw1-1">hw1-1</button> <button id="hw1-2">hw1-2</button> <button id="w13">w13</button> <button id="final1">final1</button> <button id="final2">final2</button></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<div id="brython_div"></div>
<div>我覺得第一題的程式並沒有很難，難的是要怎們利用簡單的語法來完成它。第二題的話我有努力去寫，但是還是沒辦法獨自完成，所以有問了一些同學請他們教我，我才能完成這個程式。</div>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<h2>1ag4</h2><h3>40923146</h3>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/a40923146/4267a7a1a4ea1c30e51b13fa06b6d4eb/raw/8c108073b3ebaec99458c82a9987dd7f36ba8e12/w13"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'_name_':'_main_'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/a40923146/655298448d3944929ede2c0b5f3627fe/raw/4270c334aa4b4da70884e653407fa214178e6cf0/%25E8%25B2%25AA%25E9%25A3%259F%25E8%259B%2587%2520%25E7%25AF%2584%25E4%25BE%258B"
src = open(url).read()
hw3 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["hw3"].bind("click", hw3.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/a40923146/f8b41744f92667da5ca8d16d75dc3431/raw/cbbb5443f2e3c5f1f86290f858b8be0724d42061/cp2021_hw1"
src = open(url).read()
hw1_1 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["hw1_1"].bind("click", hw1_1.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/a40923146/67d6579fdf8285cb16d451322c6411c6/raw/c3f184c35ef97e0290faf265daba5b77a7819a77/cp2021_hw1-1"
src = open(url).read()
hw1_2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["hw1_2"].bind("click", hw1_2.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/a40923146/29d01168472f4387e105d807c05a40f4/raw/11eeed9b492726060adaf297b6c69ba3a71dd47e/final_1"
src = open(url).read()
final1 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final1"].bind("click",final1.prog)
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/a40923146/3a14b3e118f5bd3976df3b383562bd84/raw/4afeca99205cb2fa7bf2660ed20229b16ed81570/final_2"
src = open(url).read()
final2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["final2"].bind("click",final2.prog)
</script>
</p>
<div id="brython_div"></div>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run">run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><button id="hw1_1">hw1-1</button><button id="hw1_2">hw1-2</button><button id="add1to100">列出十個座標</button><button id="hw3">snake</button> <button id="final1">final1</button><button id="final2">final2</button> <!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console" style="margin: 0px; width: 485px; height: 195px;"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<div id="brython_div"></div>
<p><a href="https://youtu.be/CeGx66zdY7c">Final_1</a></p>
<p><a href="https://youtu.be/S4KBipEz4D8">Final_2</a></p><h3>40923129</h3>
<p><span></span></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/40923129/c7c875305c67bde7d23c33c7284a0b23/raw/a3c01ebab29c6a75d2170717cdba954355b963de/snake"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'_name_':'_main_'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<div id="brython_div"></div>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p>!-- 存擋表單開始 --</p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<!-- 執行與清除按鈕結束 -->
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console" style="margin: 0px; width: 485px; height: 195px;"></textarea></div><h3>40923115</h3>
<p>final</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/jason60714/cbe9220a02b265113a6b75cd60310246/raw/18413b6a430c85ecc67ee8999669c2ccc223d7d7/final2"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'_name_':'_main_'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<div id="brython_div"></div>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p>!-- 存擋表單開始 --</p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<!-- 執行與清除按鈕結束 -->
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console" style="margin: 0px; width: 485px; height: 195px;"></textarea></div>
<div style="width: 100%; height: 100%;"></div>
<div style="width: 100%; height: 100%;">1.HW1-1自動方塊<a href="https://jason60714.github.io/cp2021_hw/content/%E8%87%AA%E5%8B%95%E6%96%B9%E5%A1%8A.html">https://jason60714.github.io/cp2021_hw/content/%E8%87%AA%E5%8B%95%E6%96%B9%E5%A1%8A.html</a></div>
<div style="width: 100%; height: 100%;">2.HW1-2手動方塊</div>
<div style="width: 100%; height: 100%;"><a href="https://jason60714.github.io/cp2021_hw/content/%E8%87%AA%E5%8B%95%E6%96%B9%E5%A1%8A.html">https://jason60714.github.io/cp2021_hw/content/%E8%87%AA%E5%8B%95%E6%96%B9%E5%A1%8A.html</a></div>
<div style="width: 100%; height: 100%;">3.HW2倉儲</div>
<div style="width: 100%; height: 100%;"><a href="https://jason60714.github.io/cp2021_hw/content/HW2.html">https://jason60714.github.io/cp2021_hw/content/HW2.html</a></div>
<div style="width: 100%; height: 100%;">4.HW3-1手動貪食蛇</div>
<div style="width: 100%; height: 100%;"><a href="https://jason60714.github.io/cp2021_hw/content/%E6%89%8B%E5%8B%95%E8%B2%AA%E9%A3%9F%E8%9B%87.html">https://jason60714.github.io/cp2021_hw/content/%E6%89%8B%E5%8B%95%E8%B2%AA%E9%A3%9F%E8%9B%87.html</a></div>
<div style="width: 100%; height: 100%;">5.HW3-2自動貪食蛇</div>
<div style="width: 100%; height: 100%;"><a href="https://jason60714.github.io/cp2021_hw/content/%E8%87%AA%E5%8B%95%E8%B2%AA%E9%A3%9F%E8%9B%87.html">https://jason60714.github.io/cp2021_hw/content/%E8%87%AA%E5%8B%95%E8%B2%AA%E9%A3%9F%E8%9B%87.html</a></div>
<div style="width: 100%; height: 100%;"></div>
<div style="width: 100%; height: 100%;">心得:這學期學了多工具跟程式，有錄影製作小影片的wink，截圖的share，程式學習了製作h1.2.3
<p>       分別是自動手動方塊跟手動自動貪食蛇，程式雖然不好懂，了解之後，會發現其實蠻有趣，完成</p>
<p>       時也都有成就感，感謝老師這學期的教導。 </p>
</div>
<div style="width: 100%; height: 100%;"></div><h3>40923114</h3>
<p>yt final video <a href="https://www.youtube.com/watch?v=8zrI9pglv38&amp;ab_channel=%E4%BA%A6%E5%BE%B7%E6%B1%9F">https://www.youtube.com/watch?v=8zrI9pglv38&amp;ab_channel=%E4%BA%A6%E5%BE%B7%E6%B1%9F</a></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/40923114/5de9606edad7a4112443952cf0b941cc/raw/57cb3be5f006f8d50f177c9e97eb8ac4f1078872/final%25201"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'_name_':'_main_'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<div id="brython_div"></div>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p>!-- 存擋表單開始 --</p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console" style="margin: 0px; width: 485px; height: 195px;"></textarea></div>
<h2>1ag5</h2><h3>41023126</h3>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.github.com/41023126/d488026b5dae3c83752d8cb9752ac3fc "
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

chec_qwe_url = "https://gist.githubusercontent.com/41023126/6d7cdae2b8bcf87ebc702aa809e729a9/raw/8288d63d8211651f4ff1fef627a0685ba806582d/EXAM"
 # 從 gist 取得程式碼
chec_wq = open(chec_qwe_url).read()

def chec_inp(ev):
     Ace.editor.setValue(chec_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()

# id 為 "asd" 的按鈕點按時, 執行 chec_inp 方法
doc["asd"].bind('click', chec_inp)
# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)

snake_qwe_url = "https://gist.githubusercontent.com/41023126/ad8ea9f783335ad994aa2113cb33f658/raw/f1d8dc9b3af63adc94f0a8416675a957329ee3b7/%25E8%2587%25AA%25E5%258B%2595%25E8%25B2%25AA%25E9%25A3%259F%25E8%259B%2587"
 # 從 gist 取得程式碼
snake_wq = open(snake_qwe_url).read()

def snake_inp(ev):
     Ace.editor.setValue(snake_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     Ace.run()

# id 為 "snake" 的按鈕點按時, 執行 chec_inp 方法
doc["snake"].bind('click', snake_inp)
final_qwe_url = "https://gist.githubusercontent.com/41023126/37cb47c01b85a9ec3f7f37266985d52a/raw/b204da0cd2292955046f9ee2f6a4e6a76f812e43/final2"
 # 從 gist 取得程式碼
final_wq = open(final_qwe_url).read()

def final_inp(ev):
     Ace.editor.setValue(final_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     Ace.run()
# id 為 "snake" 的按鈕點按時, 執行 chec_inp 方法
doc["final"].bind('click', final_inp)
final3_qwe_url = "https://gist.githubusercontent.com/41023126/abc9ff33278e574f12a01968051e8f56/raw/fb5124685951150447ff7776f42c2716e66cc751/final1"
 # 從 gist 取得程式碼
final3_wq = open(final3_qwe_url).read()

def final3_inp(ev):
     Ace.editor.setValue(final3_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     Ace.run()
# id 為 "snake" 的按鈕點按時, 執行 chec_inp 方法
doc["final3"].bind('click', final3_inp)
# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form><label>Filename: <input id="kw_filename" placeholder="輸入文件名" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><button id="asd">列出10個座標</button><button id="snake">snake</button> <button id="final">final2</button> <button id="final3">final1</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<div id="brython_div"></div>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<h3>41023114</h3>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/41023114/c32742a21add581dfde1a5930c078f42/raw/3d9a0f64610f124aa43f3263b01cac64590c0710/%25E5%25B0%2587%25E5%25B7%25A6%25E5%258F%25B3%25E7%25A2%25B0%25E6%2592%259E%25E7%25A7%25BB%25E5%258B%2595%25E7%259A%2584%25E7%25B4%2585%25E8%2589%25B2%25E6%2596%25B9%25E5%25A1%258A,%2520%25E6%2594%25B9%25E7%2582%25BA%25E5%2585%2588%25E7%25A7%25BB%25E5%258B%2595%25E5%2588%25B0%25E6%25B0%25B4%25E5%25B9%25B3%25E7%2595%25AB%25E9%259D%25A2%25E4%25B8%25AD%25E5%25BF%2583%25E9%25BB%259E%25E4%25BD%258D%25E7%25BD%25AE%25E5%25BE%258C,%2520%25E6%258E%25A5%25E8%2591%2597%25E4%25B8%258A%25E4%25B8%258B%25E7%25A2%25B0%25E6%2592%259E%25E7%25A7%25BB%25E5%258B%2595 "
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

chec_qwe_url = "https://gist.githubusercontent.com/41023114/a5e567c1d3f9617f42da28d9738ff054/raw/dbb18633bebf796fa3b006db4c15027f93449db8/EXAM"
 # 從 gist 取得程式碼
chec_wq = open(chec_qwe_url).read()

def chec_inp(ev):
     Ace.editor.setValue(chec_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()

# id 為 "asd" 的按鈕點按時, 執行 chec_inp 方法
doc["asd"].bind('click', chec_inp)
# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)

snake_qwe_url = "https://gist.githubusercontent.com/41023114/f780677e874a9934046662593ae066e7/raw/47ab280d5ceece22bf096aa9b28c9ab96fc50f14/snake"
 # 從 gist 取得程式碼
snake_wq = open(snake_qwe_url).read()

def snake_inp(ev):
     Ace.editor.setValue(snake_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     Ace.run()

# id 為 "final1" 的按鈕點按時, 執行 chec_inp 方法
doc["snake"].bind('click', snake_inp)
final6_qwe_url = "https://gist.githubusercontent.com/41023114/16b90d8cc80d5251e834cecfd759349e/raw/145481220e3d3c705c79e9d8508083e5b70c2d32/%25E6%25A0%25BC%25E5%25AD%2590"
 # 從 gist 取得程式碼
final6_wq = open(final6_qwe_url).read()

def final6_inp(ev):
     Ace.editor.setValue(final6_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     Ace.run()

# id 為 "final6" 的按鈕點按時, 執行 final6_inp 方法
doc["final6"].bind('click', final6_inp)
final_qwe_url = "https://gist.githubusercontent.com/41023114/52f9fee4b504a07c0fc15d628f0e0f5d/raw/297e505cd9c925892aedd7d3cbba3906b84a651d/U"
 # 從 gist 取得程式碼
final_wq = open(final_qwe_url).read()

def final_inp(ev):
     Ace.editor.setValue(final_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     Ace.run()

# id 為 "snake" 的按鈕點按時, 執行 chec_inp 方法
doc["final"].bind('click', final_inp)
# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form><label>Filename: <input id="kw_filename" placeholder="輸入文件名" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><button id="asd">列出10個座標</button><button id="snake">snake</button></p>
<p><button id="final">final2</button></p>
<p><button id="final6">final1</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<div id="brython_div"></div>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<h3>41023110</h3>
<h4>期末作業</h4>
<p><a href="/downloads/w12demo.txt">w12demo.txt</a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a>.</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> - 可以根據此規格定義, 新增 <button id="procflas">PROC flag</button> 按鈕.</p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a> - 可以根據此規格定義, 新增 <button id="usaflag">USA flag</button> 按鈕.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">add 1 to 100</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="Final1">Final1</button><button id="Final2">Final2</button><button id="run">run</button></p>
<p><button id="w13">w13</button></p>
<p><button id="hw1">hw1</button></p>
<p><button id="Bnaske">Bnaske</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<p><!-- 這裡的畫布 id 為 brython_div --></p>
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<p><!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 --></p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## Final1 start
Final1_url = "https://gist.githubusercontent.com/41023110/9d3bfbd17220547cd8b5ec4bb9370fea/raw/9456d585b016e54a65c7ccbff686801d8cdbbb91/final"
Final1 = button2(Final1_url)
doc["Final1"].bind("click", Final1.do)
################################## Final1 end
################################## Final2 start
Final2_url = "https://gist.githubusercontent.com/41023110/3e4b25eac73e7817e12c86be6e65e7b9/raw/22c067d0bb3c9868d916e562d015c1426a8ca19a/final2.2"
Final2 = button2(Final2_url)
doc["Final2"].bind("click", Final2.do)
################################## Final2 end
################################## run start
run_url = "https://gist.githubusercontent.com/mdecourse/e896a4705a95ac8cc4147b355b0e87ef/raw/8954b8280c524c5781dc3c0b3565bc489d3aa3a3/cango_gear1.py"
run = button2(run_url)
doc["run"].bind("click", run.do)
################################## w13 end
################################## w13 start
w13_url = "https://gist.githubusercontent.com/40923129/972f510bce12c851c841a67d54e921e3/raw/af34bcd0b621c80bd3eec6d432e7c812e0b101cd/exam"
w13 = button2(w13_url)
doc["w13"].bind("click", w13.do)
################################## w13 end
################################## hw1 start
hw1_url = "https://gist.githubusercontent.com/41023110/68e42ac177cc3cf785c4f26d1d04e547/raw/b414b0c34c28b01bc4d8e2800aadf9e5ae762b6d/66"
hw1 = button2(hw1_url)
doc["hw1"].bind("click", hw1.do)
################################## hw1 end
################################## Bnaske start
Bnaske_url = "https://gist.githubusercontent.com/41023110/1731df223ed5906fece0792fa93291a2/raw/9656f9bacce8fb2ecb3efcfd7fd54ce5a126ddfc/3333.txt"
Bnaske = button2(Bnaske_url)
doc["Bnaske"].bind("click", Bnaske.do)
################################## Bnaske end
</script>
</p>
<h3>41023108</h3>
<h4>期末作業</h4>
<p><span style="background-color: #ffff00;">按鈕</span>生成心得:我發現只需要在原有的地方在多加一個Button,下面加一個驅動程式即可。</p>
<p><strong></strong><span style="background-color: #ffff00;">Final1</span>心得:我從老師cp2021的網站發現建立座位表這個run經過層層修改終於做了出來了</p>
<p><span style="background-color: #ffff00;">Final2</span>心得:跟組員討論得出的結果。</p>
<p><span style="background-color: #ffff00;">w13</span>心得:有參考其他同學的程式，並且有跟其他組組員討論</p>
<p><a href="/downloads/w12demo.txt"></a></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">add 1 to 100</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="Final1">Final1</button><button id="w13">w13</button><button id="HW1">HW1</button><button id="run1">run1</button><button id="Final2">Final2</button><button id="snake">snake</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## Final1 start
Final1_url = "https://gist.githubusercontent.com/KEHUEISIN/b18f29d3badf8831f72beddf540019f3/raw/bd708c7377152b657c2ae58d33e342da8f2647e7/Final_1.py"
Final1 = button2(Final1_url)
doc["Final1"].bind('click', Final1.do)
################################## Final1 end
################################## w13 start
w13_url = "https://gist.githubusercontent.com/KEHUEISIN/67d162a4dac87451f0e6ac3dbd691baf/raw/dce7337aa1e01bf608fd6965f7ead15ab3a77dd8/w13.py"
w13 = button2(w13_url)
doc["w13"].bind('click', w13.do)
################################## w13 end
################################## HW1 start
HW1_url = "https://gist.githubusercontent.com/KEHUEISIN/d93fa395af7ec8608b74603b40489434/raw/90cc8cb8311f2332f42dc7c64a0a6803f606ff2c/HW1.py"
HW1 = button2(HW1_url)
doc["HW1"].bind('click', HW1.do)
################################## HW1 end
################################## run1 start
run1_url = "https://gist.githubusercontent.com/KEHUEISIN/90e123fd5e41b43775b050c8e2467872/raw/f8cb6a9451d30f72b7bd88549a6e5044bfcfee4b/run1.py"
run1 = button2(run1_url)
doc["run1"].bind('click', run1.do)
################################## run1 end
################################## snake start
snake_url = "https://gist.githubusercontent.com/KEHUEISIN/2fdcdb48e748933630abc4fff99c897c/raw/58efcef39c1b8310c20087583141a65c9590414c/snake.py"
snake = button2(snake_url)
doc["snake"].bind('click', snake.do)
################################## snake end
################################## Final2 start
Final2_url = "https://gist.githubusercontent.com/KEHUEISIN/d3563a806e52645a03438136fd99acde/raw/88ddfc12f7f8384c14c13680c3e4cf6eb002fc8e/Final2.py"
Final2 = button2(Final2_url)
doc["Final2"].bind('click', Final2.do)
################################## Final2 end
</script>
</p>
<h3>40823214</h3>
<p>雙人貪吃蛇</p>
<p>綠色 :wsad 上下左右</p>
<p>青色 : ikjl 上下左右</p>
<p>注意!!</p>
<p>撞到邊界或是撞到對手會判定失敗</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="sk">自動貪吃蛇</button><button id="dowsk">雙人貪吃蛇</button><button id="final_1">final_1</button><button id="final_2">final_2</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/40823214/496c7f27fae7b8674bdf820c186a84c3/raw/797a20001dd80814f112ccced3db7f7315695452/final_2.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()
################################## sk start
sk_url = "https://gist.githubusercontent.com/40823214/c7d2af4586f1e685c2da8e5aa7ff86e3/raw/e3472bf636d49ec9f0406d1076b5b53de0338274/auto_snake.py"
sk = button2(sk_url)
doc["sk"].bind("click", sk.do)
################################## dowsk end
################################## dowsk start
dowsk_url = "https://gist.githubusercontent.com/40823214/559c9ba90bc4a3e5bc430a61a8fbd0e5/raw/82811a447664cdcd249e6d6a13251943593011af/double__snake.py"
dowsk = button2(dowsk_url)
doc["dowsk"].bind("click", dowsk.do)
################################## dowsk end
################################## final1 start
final_1_url = "https://gist.githubusercontent.com/40823214/c629732430be0d571b2507142635fd05/raw/d3b46d1885d7d2ca143a612ecabe9af9c35ee8f2/final_1.py"
final_1 = button2(final_1_url)
doc["final_1"].bind("click", final_1.do)
################################## final_1 end
################################## final_2 start
final_2url = "https://gist.githubusercontent.com/40823214/496c7f27fae7b8674bdf820c186a84c3/raw/797a20001dd80814f112ccced3db7f7315695452/final_2.py"
final_2 = button2(final_2_url)
doc["final_2"].bind("click", final_2.do)
################################## final_2 end
</script>
</p>
<h2>1ag6</h2><h3>41023153</h3>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">add 1 to 100</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="snake">snake</button><button id="w13">w13</button><button id="final1">final1</button><button id="final2">final2</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/yutang327/24bda1ec1ef878d2d2e497b5edb76307/raw/e406048aad3e5bdae6832066dce78bbeffe5daf7/w12"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/yutang327/389186cc8e59eedc21ff6b502eeaa301/raw/2c1b6a6557011901e73d0614268280261763132f/w12%2520add%25201%2520to%2520100"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/yutang327/fc32562b40a4f43e1a2944ee6223b161/raw/1d2ec2afa2d771077ccc05f7f6b6c290618c46aa/w12%2520p261"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/yutang327/027d45623287f22757ad56716c1643fe/raw/ddfa253c98af8cec231571f9f6833b781be928eb/w12%2520roc%2520flag"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## snake start
snake_url = "https://gist.githubusercontent.com/yutang327/514db5ec7fec69f8ba550298ee1b0243/raw/5381958b982947e73b2fd114ebd2cd44049ea21a/snake"
snake = button2(snake_url)
doc["snake"].bind("click", snake.do)
################################## snake end
################################## w13 start
w13_url = "https://gist.githubusercontent.com/yutang327/a86b60d537f691e1183c0607ca56daf7/raw/ce17f9e1a8d53aecbb5803b9ce8bbc3955c6d768/w13_5"
w13 = button2(w13_url)
doc["w13"].bind("click", w13.do)
################################## w13 end
################################## final1 start
final1_url = "https://gist.githubusercontent.com/yutang327/e5f130cdd6c652f888b118e72154f9c6/raw/560b5c9f545647cf67533212911d7028e89f29cd/final1"
final1 = button2(final1_url)
doc["final1"].bind("click", final1.do)
################################## final1 end
################################## final2 start
final2_url = "https://gist.githubusercontent.com/yutang327/ddeb0c6d2c984d3b1886f142721aa392/raw/5eb5c9275da74405bccc9d7d6d331b7b57c86970/final2"
final2 = button2(final2_url)
doc["final2"].bind("click", final2.do)
################################## final2 end
</script>
</p>
<h3>41023140</h3>
<p><a href="/downloads/w12demo.txt">w12demo.txt</a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a>.</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> - 可以根據此規格定義, 新增 <button id="procflas">PROC flag</button> 按鈕.</p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a> - 可以根據此規格定義, 新增 <button id="usaflag">USA flag</button> 按鈕.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">add 1 to 100</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="final1">final1</button><button id="final2">final2</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## final1 start
final1_url = "https://gist.githubusercontent.com/dan41023140/eb769f52deab1c27015f0445bc3df8d2/raw/2dbed5d96858c719f70a35f2ebaec4697caa2dc3/final1"
final1 = button2(final1_url)
doc["final1"].bind("click", final1.do)
################################## final1 end
################################## final2 start
final2_url = "https://gist.githubusercontent.com/dan41023140/6719f1c34e7e1f624435edcedd05c97f/raw/bca4f7aae54a83cf46125c8b6bacc4e45f000c27/final2"
final2 = button2(final2_url)
doc["final2"].bind("click", final2.do)
################################## final2 end
</script>
</p>
<h3>41023133</h3>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="final1">final1</button><button id="final2">final2</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="add1to100">add1to100</button><button id="exam">exam</button><button id="延伸作業1">延伸作業1</button><button id="延伸作業2">延伸作業2</button><button id="延伸作業3">延伸作業3</button><button id="red">red</button><button id="redbutton">redbutton</button><button id="GAME">GAME</button><button id="GAME正式版">GAME正式版</button><button id="AISNAKE">AISNAKE</button><button id="RUNSNAKE">RUNSNAKE</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<p><!-- 這裡的畫布 id 為 brython_div --></p>
<div id="brython_div"></div>
<div>=============================================================================</div>
<div>影片網址:</div>
<div></div>
<div></div>
<div><a href="https://youtu.be/cJxHC0z8Kd0">Final1方格</a></div>
<div><a href="https://youtu.be/m5bxQrbt2so">Final2U移動方塊</a></div>
<div>=============================================================================</div>
<div>照片:</div>
<div></div>
<div>Final1</div>
<div><img alt="" height="279" src="/images/作業2.png" width="518"/></div>
<div></div>
<div>Final2</div>
<div><img alt="" height="269" src="/images/6.png" width="450"/></div>
<div></div>
<div>==============================================================================</div>
<div>心得:</div>
<div>
<p>W4 HW1 HW2</p>
<p>這是第一次接觸到計算機程式以及Python，很多地方都還不太懂，剛開始學遇到很多困難，不知道做作作業要從何下手，但後來上課把老師有講的跟自己不會的都記下來，作業有不懂的也都有去問同學，現在有比較了解一些了。</p>
<p>建立倉儲</p>
<p>一開始在創立倉儲的時候遇到很多阻礙，解壓縮解錯地方，把該打自己的網址的地方打成老師的網址，所以一直跑不出來，其實剛開始還挫折的但後來經過自己的摸索以及同學的協助之下，我順利的完成了這項作業，真的感覺到前所未有的成就感，所以也開始慢慢喜歡上了這門課了，現在常常會在課後活動的時間，繼續鑽研這個科目.</p>
<p>SNAKE心得</p>
<p><span>這個作業對我來講有點困難，我做的蛇都只能從最底下慢慢爬，經過每一個格子直到碰到格子才又從最底下開始重跑，然後後來看到同學的作品覺得很特別，他的貪食蛇可以直接追蹤到梅果，所以決定拿他的當作樣本，看著他的重新打過一遍，才能順利完成這項作業，很感謝老師和同學的幫忙。</span></p>
<p>W13心得</p>
<p><span>上課測驗的時候花了一些時間才改出座標，然後按按鈕出現程式這個部份真的不太會，後來有去前面問老師，也已經學會怎麼做了，延伸作業的部分是回來家裡才做的，過程也遇到一些困難，程式跑不出來，後來有請教同學，問題也都順利解決了。</span></p>
<p><span></span></p>
<p>GAME心得</p>
<p><span>一開始搜尋了很多種遊戲，想說能不能做點不太一樣的遊戲，剛好看到網路上有在教人如何做出猜數字遊戲，我就照著做看看了，做完之後發現它只能在網路版的python編譯器才能使用，所以就自己稍微做了一些調整讓他可以在自己的run使用，做完之後發現洪偉陞同學也做了猜數字遊戲，而且比我的方式更聰明，所以也將他的版本借來參考然後做成自己的，他真的很厲害，很多作業上遇到的瓶頸我也很常會請教他。</span></p>
</div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<p><!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/JIAN3-LIN/3dc43e44d08572edb8392431603c1987/raw/6a4aec2f90b1112e97ff4cb2642899e1eafda74e/final1"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 --></p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()
################################# final1 start 
final1_url = "https://gist.githubusercontent.com/JIAN3-LIN/3dc43e44d08572edb8392431603c1987/raw/6a4aec2f90b1112e97ff4cb2642899e1eafda74e/final1"
final1 = button2(final1_url)
doc["final1"].bind('click', final1.do)
################################# final1 end
################################# final2 start
final2_url = "https://gist.githubusercontent.com/JIAN3-LIN/d10550fd48d8531ffc1348dff7f9362d/raw/9d4a202844a4ca467cb61c8c2fe824690e38ec0d/final2"
final2 = button2(final2_url)
doc["final2"].bind('click', final2.do)
################################# final2 end
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## add1to100 start
add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################## add1to100 end
################################## exam start
exam_url = "https://gist.githubusercontent.com/JIAN3-LIN/7d1a3060eb8670c83d64f6331a9ad1a2/raw/17563dc584f83aa7727556f847d2003a3f8c254c/exam"
exam = button2(exam_url)
doc["exam"].bind('click', exam.do)
################################## exam end
################################## 延伸作業1 start
延伸作業1_url = "https://gist.githubusercontent.com/JIAN3-LIN/b382d479715381c087c84b3fc5c53078/raw/b755715cf41aa8825155ba857855cbe4a6700e88/w13-2"
延伸作業1 = button2(延伸作業1_url)
doc["延伸作業1"].bind('click', 延伸作業1.do)
################################## 延伸作業1 end
################################## 延伸作業2 start
延伸作業2_url = "https://gist.githubusercontent.com/JIAN3-LIN/3eed94f1330f9a77659dd3f0c57cdcb2/raw/b3009d871864573cf424992c72519cf7ca160d69/w13-3"
延伸作業2 = button2(延伸作業2_url)
doc["延伸作業2"].bind('click', 延伸作業2.do)
################################## 延伸作業2 end
################################## 延伸作業3 start
延伸作業3_url = "https://gist.githubusercontent.com/JIAN3-LIN/e6a4f149b40bef72fc80c334b37da717/raw/f9dde83dfc258d61a301d7a902a569264ad56ca7/w13-4"
延伸作業3 = button2(延伸作業3_url)
doc["延伸作業3"].bind('click', 延伸作業3.do)
################################## 延伸作業3 end
################################## red start
red_url = "https://gist.githubusercontent.com/JIAN3-LIN/86a80717f9a7001b0e8fa4e199a82a80/raw/d765b085fafd3268a2a08787d13fbf923c531bda/hw1-1"
red = button2(red_url)
doc["red"].bind("click", red.do)
################################## red end
################################## redbutton start
redbutton_url = "https://gist.githubusercontent.com/JIAN3-LIN/89d76e6270861f806e1f7e61ecbd31e0/raw/941e8d905e26cb48d565de5321927a8775c4e4ed/w1-2"
redbutton = button2(redbutton_url)
doc["redbutton"].bind("click", redbutton.do)
################################## redbutton end
################################## GAME start
GAME_url = "https://gist.githubusercontent.com/JIAN3-LIN/4777ad072ebe5270807cce89f6e54cfa/raw/bb17b16b09db48a9b8213a3279345fcdd17ec41a/final%2520game"
GAME = button2(GAME_url)
doc["GAME"].bind("click", GAME.do)
################################## GAME end
################################## GAME正式版 start
GAME正式版_url = "https://gist.githubusercontent.com/JIAN3-LIN/96c808ed953b5ae05a4feeca03f935e1/raw/19361625f87d98ea4e42a525768d377e62f45f0f/GAME%2520%25E6%25AD%25A3%25E5%25BC%258F%25E7%2589%2588"
GAME正式版 = button2(GAME正式版_url)
doc["GAME正式版"].bind("click", GAME正式版.do)
################################## GAME正式版 end
################################## AISNAKE start
AISNAKE_url = "https://gist.githubusercontent.com/JIAN3-LIN/35cedd548e0a83b96c727c55e290c907/raw/42c36a724864593f4172b628188f773e3e1f2400/snake"
AISNAKE = button2(AISNAKE_url)
doc["AISNAKE"].bind("click", AISNAKE.do)
################################## AISNAKE end
################################## RUNSNAKE start
RUNSNAKE_url = "https://gist.githubusercontent.com/JIAN3-LIN/0e8bcab206f4a3e402a148b947588d00/raw/8a3f8ffce0324ab88d5f8647fc3eae041f7def79/run%2520snake"
RUNSNAKE = button2(RUNSNAKE_url)
doc["RUNSNAKE"].bind("click", RUNSNAKE.do)
################################## RUNSNAKE end
</script>
</p>
<h3>41023121</h3>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- for ggame -->
<p>
<script src="/static/jquery-3.3.1.min.js"></script>
<script src="/static/jquery-ui.1.12.1.min.js"></script>
<script src="/static/pixi-3.0.5.min.js"></script>
<script src="/static/buzz-1.2.1.js"></script>
<script src="/static/bs.js"></script>
<script src="/downloads/brython_modules.js"></script>
</p>
<!-- Cango 程式庫 -->
<p>
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/CangoAxes-6v01-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
</p>
<!-- for Konva 程式庫 -->
<p>
<script src="/static/konva.min.js"></script>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
from browser import html
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
Ace.editor.setValue("""import random
n=10
for i in range(1,n+1):
    r=random.randint(1,18)
    t=random.randint(1,18)
    print("第"+str(i)+"個紅色方塊座標為("+str(r)+","+str(t)+")")
""")
Ace.editor.scrollToRow(0)
Ace.editor.gotoLine(0)
# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form>
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<div id="brython_div"></div>
<div class="col-md-0" height="1" id="graphics-column" width="1"></div>
<p><!-- ****************************** keyword start --></p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023121/8080347ef0632cda69ec6f6f6b001fb6/raw/6cd5929c28781a4f8d87d00a980b940f3f2af083/%25E8%25B2%25AA%25E9%25A3%259F%25E8%259B%2587"
src = open(url).read()
snake4= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake4"].bind("click", snake4.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023121/0c2fea57ad38dfe33be2c6e2ec79091c/raw/c3385bcb3452cc4b94f7d73aba9f9cd3e434d7c8/%25E7%25B0%25A1%25E6%2598%2593%25E8%25A8%2588%25E7%25AE%2597%25E6%25A9%259F"
src = open(url).read()
snake8= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake8"].bind("click", snake8.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023121/3ddda833c005f680d66d58038f961252/raw/ab8087df18ad73684dd2e3d31adfe45b94da08fb/%25E5%25AD%2597%25E5%2585%25B8"
src = open(url).read()
snake9= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake9"].bind("click", snake9.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023121/622e8ccbbd173b5cb5bb8863f9fe7c94/raw/f26b79e305126d31d28630d0e5fa57159f8a873a/while"
src = open(url).read()
snake2= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake2"].bind("click", snake2.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023121/b3e1aa6bf4956bb11aa247f76f497a66/raw/b4e3b9c8da4320ad0bdb006f394746a5e5eeaef9/%25E7%258C%259C%25E6%2595%25B8%25E5%25AD%25971%25E5%2588%25B05000"
src = open(url).read()
snake6= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake6"].bind("click", snake6.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023121/15228ebad976ab72b0e9bac477a0a782/raw/9c9efe7d0848483280087572e3b873a7f373a337/gistfile1.txt"
src = open(url).read()
snake3= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake3"].bind("click", snake3.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023121/6db8b35d467ecee51d3500e49b286f61/raw/7215f29f791ada40474a1d39048c76eb95a5ac5c/aii%2520sn"
src = open(url).read()
snake5= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake5"].bind("click", snake5.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023121/f4195e66b8b5ed2241e3914e2568aca8/raw/04a1f72aba9856b04df5d183e672a1a5650edac7/w13"
src = open(url).read()
snake= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake"].bind("click", snake.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023121/c01c8cf5151eb415ce16e5d3de197561/raw/7902f70d51a74285c6dd33842e21c469c58ae4c2/w13%25E5%25BB%25B6%25E4%25BC%25B8"
src = open(url).read()
snake1= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake1"].bind("click", snake1.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023121/229e53361d1f724f285a27eba6a9c773/raw/52c3650386e063c9c945f48933e961c0c82b982b/final1"
src = open(url).read()
snake13= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake13"].bind("click", snake13.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023121/490099de67a0b2a440562ecf068c6c7c/raw/e45f35a716b1ae365768c5d1d993c41eb0360db6/final2"
src = open(url).read()
snake14= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["snake14"].bind("click", snake14.prog)
</script>
<p><button id="snake">10個座標</button><button id="snake1">進階</button><button id="snake4">snake</button><button id="snake8">計算機</button><button id="snake9">python字典</button><button id="snake2">while用法</button><button id="snake6">數字遊戲</button><button id="snake3">for應用</button><button id="snake5">ai snake</button><button id="snake13">final1</button><button id="snake14">final2</button></p>
<h2>1ag7</h2><h3>41023142</h3>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/e896a4705a95ac8cc4147b355b0e87ef/raw/8954b8280c524c5781dc3c0b3565bc489d3aa3a3/cango_gear1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023142/7cfe37efee75d9e08b9e22b342bace00/raw/5df05bdc623b17c585b15102ff2768ee9b95583a/w13-1"
src = open(url).read()
w13 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w13"].bind("click", w13.prog)
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><button id="w13">列出 10 個座標</button></p>
<!-- 執行與清除按鈕結束 -->
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 -->
<div id="brython_div"></div>
<!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
<h2>1ag8</h2><h3>41023154</h3>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="hw1_1">hw1_1</button><button id="hw1_2">hw1_2</button></p>
<p><button id="add1to100">add 1 to 100</button><button id="rocflag">ROC flag</button><button id="列出十個座標">列出十個座標</button></p>
<p><button id="snake">Snake</button></p>
<p><button id="final1">final1</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<p><!-- 這裡的畫布 id 為 brython_div --></p>
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<p><!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 --></p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/zeromarurei/eb242cb8c0f47ea7379ffd1b56c2ec4f/raw/c841860cbf289c4b25965538fec2c80503c99170/1%2520add%2520100"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# hw1_1 start 
hw1_1_url = "https://gist.githubusercontent.com/zeromarurei/22e4b041d9bf9d75ecf1be257ebf4e74/raw/c27ba8810aaca6bf00183f7b5a5765e689883af9/gistfile1.txt"
hw1_1 = button2(hw1_1_url)
doc["hw1_1"].bind('click', hw1_1.do)
################################## hw1_1 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## hw1_2 start
hw1_2_url = "https://gist.githubusercontent.com/zeromarurei/a3da102e6cba9840a115762e77a9adeb/raw/780fc69bc8486daa8493285dd46bc982110e0977/gistfile1.txt"
hw1_2 = button2(hw1_2_url)
doc["hw1_2"].bind("click", hw1_2.do)
################################## hw1_2 end
################################## snake start
snake_url = "https://gist.githubusercontent.com/zeromarurei/c53253a06a1755a8720a9bd07cd2dfe0/raw/e6b8c6abd75c1c7b28281d0f4005ab6bfa10631d/Snake"
snake = button2(snake_url)
doc["snake"].bind("click", snake.do)
################################## snake end
################################## 列出十個座標 start
列出十個座標_url = "https://gist.githubusercontent.com/zeromarurei/1a58139c06513db48d8f294026b6d904/raw/45845b34f30577ce0607830641c26c3aade843c5/%25E5%258F%2596%25E4%25BA%2582%25E6%2595%25B82"
列出十個座標 = button2(列出十個座標_url)
doc["列出十個座標"].bind("click", 列出十個座標.do)
################################## 列出十個座標 end
################################## final1 start
final1_url = "https://gist.githubusercontent.com/zeromarurei/2a69e9deb4b146415f9ad17c2c3081b6/raw/7ab6e2c21a8f0d8b6b520486ef0e088d3b2980e7/final1"
final1 = button2(final1_url)
doc["final1"].bind("click", final1.do)
################################## final1 end
</script>
</p>
<h3>40823227</h3>
<h4>final project</h4>
<p><span>期末心得:在編寫程式的過程中,偶爾發現有些程式碼有一定的規則,沒注意到就導致網頁跑不出來,好在問了老師和同學之後,就明白其中需要注意的事項(像是有些code前面不能是數字)</span></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p>HW1</p>
<p><button id="red1">紅點1</button><button id="red2">紅點2</button></p>
<p>HW2</p>
<p><button id="ms">手動蛇</button><button id="ats">自動蛇</button></p>
<p>HW3</p>
<p><button id="atsb">自動蛇(優化)</button></p>
<p>Exam</p>
<p><button id="tenpositions">列出 10 個座標</button></p>
<p>小遊戲</p>
<p><button id="ng">數字海裡尋覓你</button></p>
<p>期末測驗</p>
<p><button id="final_1">final_1</button><button id="final_2">final_2</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<p><!-- 這裡的畫布 id 為 brython_div --></p>
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<p><!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/40823227/2ce33b92331c414455186e4ab358937b/raw/efe5c6a8f0f1dee7416795b096170148c313a367/%25E7%25B4%2585%25E8%2589%25B2%25E6%2596%25B9%25E5%25A1%258A-1"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 --></p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()


################################## 紅點1 start
red1_url = "https://gist.githubusercontent.com/40823227/2ce33b92331c414455186e4ab358937b/raw/efe5c6a8f0f1dee7416795b096170148c313a367/%25E7%25B4%2585%25E8%2589%25B2%25E6%2596%25B9%25E5%25A1%258A-1"
red1 = button2(red1_url)
doc["red1"].bind('click', red1.do)
################################## 紅點1 end
################################## 紅點2 start
red2_url = "https://gist.githubusercontent.com/40823227/c61935fe2bd9bb583ffd9d1214f2823c/raw/5af869167d009fd19ac564dd772d6e6ec2c6808f/%25E7%25B4%2585%25E8%2589%25B2%25E6%2596%25B9%25E5%25A1%258A-2"
red2 = button2(red2_url)
doc["red2"].bind('click', red2.do)
################################## 紅點2 end
################################## 手動蛇 start
ms_url = "https://gist.githubusercontent.com/40823227/5c03f0e063a43c6ebb1aaffd1e75e210/raw/38ad940f9ab76e8e806011245d464de84e8860f6/%25E6%2589%258B%25E5%258B%2595%25E5%259F%25B7%25E8%25A1%258C%25E8%25B2%25AA%25E9%25A3%259F%25E8%259B%2587"
ms = button2(ms_url)
doc["ms"].bind('click', ms.do)
################################## 手動蛇 end
################################## 自動蛇 start
ats_url = "https://gist.githubusercontent.com/40823227/5da84c82db11272a154e8ec65a5e4b08/raw/3c485d3e580d6292db61d15a747c1e15fc6f7b90/%25E8%2587%25AA%25E5%258B%2595%25E5%259F%25B7%25E8%25A1%258C%25E8%25B2%25AA%25E9%25A3%259F%25E8%259B%2587"
ats = button2(ats_url)
doc["ats"].bind('click', ats.do)
################################## 自動蛇 end
################################## 自動蛇(優化) start
atsb_url = "https://gist.githubusercontent.com/40823227/7a7f997e826e894f57af46dfc2b2e8ab/raw/59f7e71fb6121722450721ceffd680ed16b200f0/%25E8%2587%25AA%25E5%258B%2595%25E5%259F%25B7%25E8%25A1%258C%25E8%25B2%25AA%25E9%25A3%259F%25E8%259B%2587(%25E5%2584%25AA%25E5%258C%2596%25E7%2589%2588)"
atsb = button2(atsb_url)
doc["atsb"].bind('click', atsb.do)
################################## 自動蛇(優化) end
################################## 列出 10 個座標 start
tenpositions_url = "https://gist.githubusercontent.com/40823227/0f52a5f63eab8fb8558c0e5d22244f0d/raw/11739a7c3dda35b862a6ad68c1fb022e7b9d532d/W13"
tenpositions = button2(tenpositions_url)
doc["tenpositions"].bind('click', tenpositions.do)
################################## 列出 10 個座標 end
################################## 數字海裡尋覓你 start
ng_url = "https://gist.githubusercontent.com/40823227/2cd1bcd810235c54d1272a5d4de45753/raw/14c284f022129fc22737c4d29391d1be5200437d/%25E5%259C%25A8%25E8%258C%25AB%25E8%258C%25AB%25E6%2595%25B8%25E5%25AD%2597%25E6%25B5%25B7%25E8%25A3%25A1%25E5%25B0%258B%25E8%25A6%2593%25E5%2594%25AF%25E4%25B8%2580%25E7%259A%2584%25E4%25BD%25A0"
ng = button2(ng_url)
doc["ng"].bind('click', ng.do)
################################## 數字海裡尋覓你 end
################################## final_1 start
final_1_url = "https://gist.githubusercontent.com/40823227/be8bee9a5aabd8f10c7c990eda5df3d5/raw/bdce906464d5dbe7214eca91bebcd323235603d0/final_1"
final_1 = button2(final_1_url)
doc["final_1"].bind('click', final_1.do)
################################## final_1 end
################################## final_2 start
final_2_url = "https://gist.githubusercontent.com/40823227/a8baa1baa6dc91fd8d055c8b3b00aca6/raw/cefc9c6486bc5a34fa4ad97b8eefcc158f861282/final_2"
final_2 = button2(final_2_url)
doc["final_2"].bind('click', final_2.do)
################################## final_2 end
</script>
</p>
<p>final_1</p>
<p><img alt="" height="279" src="/images/螢幕擷取畫面 2022-01-06 154422.jpg" width="600"/></p>
<p><iframe allowfullscreen="allowfullscreen" height="336" src="//www.youtube.com/embed/AmbRu8x6BbM" width="600"></iframe></p>
<p>final_2</p>
<p><img alt="" height="278" src="/images/螢幕擷取畫面 2022-01-06 163238.jpg" width="600"/></p>
<p><iframe allowfullscreen="allowfullscreen" height="336" src="//www.youtube.com/embed/tslQzuySDJc" width="600"></iframe></p>
<h1>1b</h1>
<h2>1bg1</h2><h3>41023247</h3>
<p><a href="/downloads/w12demo.txt"></a></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to10">add 1 to 10</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="red">red</button><button id="red2">red2</button><button id="snake1">snake1</button><button id="snake2">snake2</button><button id="w13">w13</button><button id="w13ch">w13ch</button><button id="final1">final1</button> <button id="final2">final2</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to10_url = "https://gist.githubusercontent.com/41023247/d47e70d5123779d94a7b31dffd038542/raw/b5f19e419731dd913d222b34657c7a885d774055/gistfile1.py"
add1to10 = button2(add1to10_url)
doc["add1to10"].bind('click', add1to10.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## rocflag start
red_url = "https://gist.githubusercontent.com/41023247/121a5f6845df44b68b9a9cb69394c0d9/raw/71748705a737c31fa5e39473bca1ee909d451e13/gistfile1.txt"
red = button2(red_url)
doc["red"].bind("click",red.do)
################################## rocflag end
################################## rocflag start
red2_url = "https://gist.githubusercontent.com/41023247/8ff6c3a5b7e7bc3a14a9f38568ddc7d2/raw/5c34da85ee75a96b83151a9c176367fb2f04db76/gistfile1.txt"
red2 = button2(red2_url)
doc["red2"].bind("click", red2.do)
################################## rocflag end
################################## rocflag start
snake1_url = "https://gist.githubusercontent.com/41023247/61063080a76cb29f935ee7b80be94dac/raw/50a5c3598c00a1f9f98eb33ec00d97b340d9e398/HW3"
snake1 = button2(snake1_url)
doc["snake1"].bind("click", snake1.do)
################################## rocflag end
################################## rocflag start
w13_url = "https://gist.githubusercontent.com/41023247/d3ce4336c3e103567cc2b93ac208a76c/raw/8f12dc88e935e298f50403f2a52b1cc6a3e7f202/w13"
w13 = button2(w13_url)
doc["w13"].bind("click", w13.do)
################################## rocflag end
################################## rocflag start
w13ch_url = "https://gist.githubusercontent.com/41023247/163f3b7c35b3b673eb633a790c3db1ec/raw/7672fd54d07f58148dbf89a7323a13de5d02adaf/w13ch.py"
w13ch = button2(w13ch_url)
doc["w13ch"].bind("click", w13ch.do)
################################## rocflag end
################################## rocflag start
snake2_url = "https://gist.githubusercontent.com/41023247/d3d09e3e438a640bac84aafef4d52283/raw/910fa38a0821b16fa9e1dd2d0c385a720438c12e/gistfile1.txt"
snake2 = button2(snake2_url)
doc["snake2"].bind("click", snake2.do)
################################## rocflag end
################################## rocflag start
final1_url = "https://gist.githubusercontent.com/41023247/b65f21f8c05e1cc74913213de46d9e13/raw/f2b1fdfb26a94849a11206e74edeebca17797617/exam1"
final1 = button2(final1_url)
doc["final1"].bind("click", final1.do)
################################## rocflag end
################################## rocflag start
final2_url = "https://gist.githubusercontent.com/41023247/21ec2ee5a1ad2eb0204bb25f9dee7186/raw/b95811005948eba6ddabdcb19204967ad14622aa/gistfile1.txt"
final2 = button2(final2_url)
doc["final2"].bind("click", final2.do)
################################## rocflag end
</script>
</p>
<h3>41023207</h3>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details"></a></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">add 1 to 100</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="red_1">red_1</button><button id="red_2">red_2</button><button id="random_1">random_1</button><button id="random_2">random_2</button><button id="final_1">final_1</button><button id="final_2">final_2</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<p>
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/chiiip333/01ddbeaa51e54c6c9d8c35ef2702e85d/raw/466e3a6802246ee942eb375a986dc7ed13c6f1c6/add%25201%2520to%2520100"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/chiiip333/1bfc106e4ed4109425176ca804e52919/raw/8daebf34167eb09c0c1e382b4aed5579888f84ec/p261"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/chiiip333/5264d5fb2d51f44387a5ffb7faceaaf9/raw/4ab410c214bf97f7e9d814932f5ae07d9ae85150/ROG"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## red_1 start
red_1_url = "https://gist.githubusercontent.com/chiiip333/4d1a6320b7443760562216fd6f2386ad/raw/2ca8b4ce52140d9e3f1c0412834371c262bc392b/red1"
red_1 = button2(red_1_url)
doc["red_1"].bind("click", red_1.do)
################################## red_1 end
################################## red_2 start
red_2_url = "https://gist.githubusercontent.com/chiiip333/2a52fde7cbad149bf5bae00dff1f5e50/raw/ccea1a4f87970586472e8048f750397745970216/red2"
red_2 = button2(red_2_url)
doc["red_2"].bind("click", red_2.do)
################################## red_2 end
################################## random_1 start
random_1_url = "https://gist.githubusercontent.com/chiiip333/3b6edb0cf229c05e033e04ce9cd31c97/raw/524f1ecd48b84bf4823e3955d445f45f19e8f6eb/random1"
random_1 = button2(random_1_url)
doc["random_1"].bind("click", random_1.do)
################################## random_1 end
################################## random_2 start
random_2_url = "https://gist.githubusercontent.com/chiiip333/8611a11ad29eddfa4cb0b8d8cd693dd8/raw/c7dedcff14735dffe9c88cf10e3801a102fdedd7/random2"
random_2 = button2(random_2_url)
doc["random_2"].bind("click", random_2.do)
################################## random_2 end
################################## final_1 start
final_1_url = "https://gist.githubusercontent.com/chiiip333/55fd0fc77a09e7d0d64cb3dfd170d488/raw/aac4da5a8b83c0d91b45cc5e2e7de552e51ed3a3/final1"
final_1 = button2(final_1_url)
doc["final_1"].bind("click", final_1.do)
################################## final_1 end
################################## final_2 start
final_2_url = "https://gist.githubusercontent.com/chiiip333/a7bf4d71b88f2874427f414c13376a5e/raw/10f454a9d059355bee58868cbf01ca573346fecc/final2"
final_2 = button2(final_2_url)
doc["final_2"].bind("click", final_2.do)
################################## final_2 end
</script>
</p>
<!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<p>
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<h3>41023204</h3>
<p>網站倉儲:<span> </span><a href="https://github.com/04yxuan/cp2021-hw">https://github.com/04yxuan/cp2021-hw</a></p>
<p>網站連結: <a href="https://04yxuan.github.io/cp2021-hw/">https://04yxuan.github.io/cp2021-hw/</a></p>
<p><span>其他與個人或作業相關資料說明或介紹</span></p>
<p><a href="/downloads/w12.txt"></a></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">add 1 to 100</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="w13_1">w13_1</button><button id="w13_2">w13_2</button><button id="final1">final1</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################# w13_1start 
w13_1_url = "https://gist.githubusercontent.com/04yxuan/f49fa52f65bf052cd7fc09c7ab82b3e3/raw/8b1100dbed694a8d2b0cb1f34e27ac68eadc491b/w13_1"
w13_1 = button2(w13_1_url)
doc["w13_1"].bind('click', w13_1.do)
################################## w13_1 end
################################# w13_2start 
w13_2_url = "https://gist.githubusercontent.com/04yxuan/49457d3d5d766667249de9be59be9e9e/raw/1d85acf416accd92c2d9efd7488088167aed6ba6/w13_2"
w13_2 = button2(w13_2_url)
doc["w13_2"].bind('click', w13_2.do)
################################## w13_2 end
################################# final1start 
final1_url = "https://gist.githubusercontent.com/04yxuan/1aea6b1a117d7183f8ff112c1693ad2b/raw/d3402e1a4fbce19c3fa20cf9adc43c94ea71df69/final1"
final1 = button2(final1_url)
doc["final1"].bind('click', final1.do)
################################## final1 end
</script>
</p>
<h3>41023203</h3>
<p><a href="/downloads/w12.txt"></a></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<!-- ###################### button開始 ###################### -->
<p><button id="add1to100">add 1 to 100</button><button id="hw1">hw1</button><button id="hw2">hw2</button><button id="rocflag">ROC flag</button><button id="w13_1">w13_1</button><button id="w13_2">w13_2</button><button id="foolish">foolish</button><button id="bright">bright</button><button id="final1">final1</button><button id="final2">final2</button><button id="final3">final3</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

################################# add1to100start
add1to100_url = "https://gist.githubusercontent.com/SHIUN129/4a9c2c0d1e7fe720b9e29fe59f7fe229/raw/8dedeffbb8334203bc20afd221ccf2b7711b1b90/add1to100"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click',add1to100.do)
##################################add1to100 end
################################# hw1start 
hw1_url = "https://gist.githubusercontent.com/SHIUN129/4520577d026bac5f49858434826fb967/raw/4b25de57cde1a771dcd0459f52afc87e31c9585b/hw.py"
hw1 = button2(hw1_url)
doc["hw1"].bind('click', hw1.do)
################################## hw1 end
################################# hw2start 
hw2_url = "https://gist.githubusercontent.com/SHIUN129/0813967b6782205f8f9d0c467e87ea7a/raw/a0bf0767f3f9374625edb3eb07bb8e43704ff233/hw%2520new.py"
hw2 = button2(hw2_url)
doc["hw2"].bind('click', hw2.do)
################################## hw2 end

################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################# w13_1start 
w13_1_url = "https://gist.githubusercontent.com/SHIUN129/3dacc6e08a29715f11e830caa98d9869/raw/36a50d699cffa2917dbca369688f7ecb37618023/w13-1.py"
w13_1 = button2(w13_1_url)
doc["w13_1"].bind('click', w13_1.do)
################################## w13_1 end
################################# w13_2start 
w13_2_url = "https://gist.githubusercontent.com/SHIUN129/55a7bb8aa0a33511822e4ac2f2763988/raw/dfa040e7f70d09d5ddd01f409c1b330be6938a3c/w13-2"
w13_2 = button2(w13_2_url)
doc["w13_2"].bind('click', w13_2.do)
################################## w13_2 end
################################# foolishstart
foolish_url = "https://gist.githubusercontent.com/SHIUN129/78c24f679f98ba4bce7f07d3a2de3f71/raw/830275c9f138194d9fa3398eddc3f4af94605c30/foolish"
foolish = button2(foolish_url)
doc["foolish"].bind('click', foolish.do)
################################## foolish end
################################# brightstart
bright_url = "https://gist.githubusercontent.com/SHIUN129/69bb611d08a367000deeb97ab0eeb605/raw/513e05ce82f2c1bc3cb9b918bd9bce734264c64b/bright"
bright = button2(bright_url)
doc["bright"].bind('click', bright.do)
################################## bright end
################################# final1start 
final1_url = "https://gist.githubusercontent.com/SHIUN129/6c1b083b3d3fb3b488dbd60d74919893/raw/52f018345d522d1a92a5b792e6f92f0f566beaad/final1"
final1= button2(final1_url)
doc["final1"].bind('click', final1.do)
################################## final1 end
################################# final2start 
final2_url = "https://gist.githubusercontent.com/SHIUN129/12d269bdafd459bfbec4c19657337a7b/raw/ec0baafb2de66b867105a112772020f05db5e40d/final2"
final2= button2(final2_url)
doc["final2"].bind('click', final2.do)
################################## final2 end
################################# final3start 
final3_url = " "
final3= button2(final3_url)
doc["final3"].bind('click', final2.do)
################################## final3 end
</script>
</p>
<h3>41023201</h3>
<p><a href="/downloads/w12.txt">w12.txt</a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a>.</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> - 可以根據此規格定義, 新增 <button id="procflas">PROC flag</button> 按鈕.</p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a> - 可以根據此規格定義, 新增 <button id="usaflag">USA flag</button> 按鈕.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">add 1 to 100</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="w13_1">w13_1</button><button id="w13_2">w13_2</button><button id="final_1">final1</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################# w13_1start 
w13_1_url = "https://gist.githubusercontent.com/ruoqinz0421/a516958ce071755297302e1fa240a173/raw/7cdcbc2af750f89cbbc17cc08955b441913cc54a/w13_1.py"
w13_1 = button2(w13_1_url)
doc["w13_1"].bind('click', w13_1.do)
################################## w13_1 end
################################# w13_2start 
w13_2_url = "https://gist.githubusercontent.com/ruoqinz0421/a516958ce071755297302e1fa240a173/raw/7cdcbc2af750f89cbbc17cc08955b441913cc54a/w13_2.py"
w13_2 = button2(w13_2_url)
doc["w13_2"].bind('click', w13_2.do)
################################## w13_2 end
################################# final_1start 
final_1_url = "https://gist.githubusercontent.com/ruoqinz0421/eaeb155eb47cb6a78963e114f47a42d6/raw/459be5733d5931928db643c15dacb3f1b9e355ee/final_1.py"
final_1 = button2(final_1_url)
doc["final_1"].bind('click', final_1.do)
################################## final_1 end
</script>
</p>
<h2>1bg2</h2><h2>RUN</h2>
<p><a href="/downloads/w12demo.txt">w12demo.txt</a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a>.</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> - 可以根據此規格定義, 新增 <button id="procflas">PROC flag</button> 按鈕.</p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a> - 可以根據此規格定義, 新增 <button id="usaflag">USA flag</button> 按鈕.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">add1to100</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="red">red</button><button id="red2">red2</button><button id="random">random</button><button id="gear">gear</button><button id="final"> final</button><button id="snake"> snake</button><button id="snake2">snake2</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()
################################## add1to100 start
add1to100_url = "https://gist.githubusercontent.com/Yao-Hsien41023241/13bd0f765663ee9c2ca6aedb2f5b4b75/raw/beecdf3ba6ed09109f3e9e5febb752d88eb941f2/add1to100.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################## add1to100 end
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## rocflag start
red_url = "https://gist.githubusercontent.com/Yao-Hsien41023241/49bdf6850d8c68d96c4977e26b95523d/raw/056d375ebc434171d1a59a014f1aac4bce391d41/gistfile1.py"
red = button2(red_url)
doc["red"].bind("click", red.do)
################################## rocflag end
################################## rocflag start
red2_url = "https://gist.githubusercontent.com/Yao-Hsien41023241/9f488942e49d5cbd863ab4980c04cc4c/raw/73d6caf36fdf90de05d9239c3c6eb53906b434c1/gistfile1.py"
red2 = button2(red2_url)
doc["red2"].bind("click", red2.do)
################################## rocflag end
################################# random start 
random_url = "https://gist.githubusercontent.com/Yao-Hsien41023241/9cd45f287593df3e18d4c741d3ee9fc0/raw/c897ae6aef81983d0785cbc1cea49b73bb6e94c9/random.py"
random = button2(random_url)
doc["random"].bind('click', random.do)
################################## random end
################################# final start 
final_url = "https://gist.githubusercontent.com/Yao-Hsien41023241/0e53cb603ad19f0c0a697390c649fa16/raw/3aca06b305bff68ad6f0412a11cc2b3c6a230bc7/final.py"
final = button2(final_url)
doc["final"].bind('click', final.do)
################################## final end
################################# snake start 
snake_url = "https://gist.githubusercontent.com/Yao-Hsien41023241/eb90dce4f75a1ddc5ab051179d4f03bf/raw/14b05c35b91864b68ba068a340e28362dd5797b4/snake.py"
snake = button2(snake_url)
doc["snake"].bind('click', snake.do)
################################## snake end
################################# gear start 
gear_url = "https://gist.githubusercontent.com/Yao-Hsien41023241/498e2e8407c6ed79604ecd419204b209/raw/3c8243956167d7bf39b9adc88141c335f2fb83dd/gear.py"
gear = button2(gear_url)
doc["gear"].bind('click', gear.do)
################################## gear end
################################# snake2 start 
snake2_url = "https://gist.githubusercontent.com/Yao-Hsien41023241/c12c9cd7b1042dc597054c520920297b/raw/7ed1be9ec143fbd49d9c24c8819332c40939892a/snake2.py"
snake2 = button2(snake2_url)
doc["snake2"].bind('click', snake2.do)
################################## snake2 end
</script>
</p>
<h3>41023206</h3>
<p>HW3 - AI 貪食蛇佔學期成績 30%.</p>
<p><span style="background-color: #ffff99;">HW3 必須在 2021.12.22 22:00 之前完成.</span></p>
<p><a href="https://github.com/mdecourse/cp2021/discussions/10">HW3 具體項目成果回報區</a>將於 2021.11.09 開啟, 於 <span style="background-color: #ff99cc;">2021.12.22 22:00 關閉</span></p>
<p>網際貪食蛇的逆襲, 誰的<a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439/raw/2160a12b9fec9707a120a383ed5d38b9b78a02cf/snake.py">自動執行貪食蛇</a>能夠破紀錄? 目前直覺貪食蛇紀錄為 45 節 (除了蛇身節數外, 應該還要置入出現紅色標的物後的總完食時間).</p>
<p><a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439/raw/f188098281ecaeedeea484c074ab34a05c3086eb/manual_snake.py">手動執行貪食蛇</a>程式說明與整理.</p>
<p><a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439/raw/2160a12b9fec9707a120a383ed5d38b9b78a02cf/snake.py">自動執行貪食蛇</a>程式說明與整理.</p>
<p><a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439/raw/2160a12b9fec9707a120a383ed5d38b9b78a02cf/snake.py">自動執行貪食蛇</a>程式的改進.</p>
<h4>參考資料:</h4>
<p style="padding-left: 30px;"><a href="https://mde.tw/cp2021/content/Task3.html">https://mde.tw/cp2021/content/Task3.html</a></p>
<p style="padding-left: 30px;">Brython snake 原始來源: <a href="https://medium.com/swlh/sick-of-javascript-just-use-browser-python-4b9679efe08b">https://medium.com/swlh/sick-of-javascript-just-use-browser-python-4b9679efe08b</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/snake-Q-Learning">https://github.com/mdecourse/snake-Q-Learning</a></p>
<p style="padding-left: 30px;"><a href="https://towardsdatascience.com/teaching-a-computer-how-to-play-snake-with-q-learning-93d0a316ddc0">https://towardsdatascience.com/teaching-a-computer-how-to-play-snake-with-q-learning-93d0a316ddc0</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/SnakeQlearning">https://github.com/mdecourse/SnakeQlearning</a></p>
<p style="padding-left: 30px;"><a href="https://medium.com/@italohdc/learnsnake-teaching-an-ai-to-play-snake-using-reinforcement-learning-q-learning-b63ac23dfdd1">https://medium.com/@italohdc/learnsnake-teaching-an-ai-to-play-snake-using-reinforcement-learning-q-learning-b63ac23dfdd1</a></p>
<p style="padding-left: 30px;"><a href="https://towardsdatascience.com/snake-played-by-a-deep-reinforcement-learning-agent-53f2c4331d36">https://towardsdatascience.com/snake-played-by-a-deep-reinforcement-learning-agent-53f2c4331d36</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/ai-driven-snake-game-using-deep-q-learning/">https://www.geeksforgeeks.org/ai-driven-snake-game-using-deep-q-learning/</a></p>
<p style="padding-left: 30px;"><a href="https://www3.hs-albsig.de/wordpress/point2pointmotion/2020/10/09/deep-reinforcement-learning-with-the-snake-game/">https://www3.hs-albsig.de/wordpress/point2pointmotion/2020/10/09/deep-reinforcement-learning-with-the-snake-game/</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2016_Exploration of Reinforcement Learning to SNAKE.pdf">2016_Exploration of Reinforcement Learning to SNAKE.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/train_a_snake_with_reinforceme.pdf">train_a_snake_with_reinforceme.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://medium.com/@hugo.sjoberg88/using-reinforcement-learning-and-q-learning-to-play-snake-28423dd49e9b">https://medium.com/@hugo.sjoberg88/using-reinforcement-learning-and-q-learning-to-play-snake-28423dd49e9b</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/Snake-Reinforcement-Learning">https://github.com/mdecourse/Snake-Reinforcement-Learning</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Autonomous-Agents-in-Snake-Game-via-Deep-Reinforcement-Learning.pdf">Autonomous-Agents-in-Snake-Game-via-Deep-Reinforcement-Learning.pdf</a></p>
<h4>延伸應用:</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/PJl4iabBEz0" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/5Vy5Dxu7vDs" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/6pJBPPrDO40" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/VGkcmBaeAGM" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://github.com/mdecourse/snake-ai-pytorch">https://github.com/mdecourse/snake-ai-pytorch</a></p>
<h3>41023205</h3>
<p><a href="/downloads/w12.txt"></a></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to10">add 1 to 10</button><button id="red">red</button><button id="red2">red2</button><button id="snake">snake</button><button id="random">random</button><button id="random2">random2</button><button id="15x15">add 15x15</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<p><!-- 這裡的畫布 id 為 brython_div --></p>
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<p><!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 --></p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to10_url = "https://gist.githubusercontent.com/c-ching/508804aaa1dfc656c067304e2ab99711/raw/83c8cf9b5fa24dd12c5422d49c00656d1fba7463/ten"
add1to10 = button2(add1to10_url)
doc["add1to10"].bind('click', add1to10.do)
################################## red start
red_url ="https://gist.githubusercontent.com/c-ching/210642ce4dfd840af981cf81bf3a7182/raw/46d1339637f2ceb7fc6d07198861296540bef417/red.py"
red = button2(red_url)
doc["red"].bind("click", red.do)
################################## red end
################################## red2 start
red2_url ="https://gist.githubusercontent.com/c-ching/22ccf2604e771f5f6be2e77df4d36779/raw/571bb3fda9d7165f2eacbee18082f47670859397/2.red2"
red2 = button2(red2_url)
doc["red2"].bind("click", red2.do)
################################## red2 end
################################## snake start
snake_url ="https://gist.githubusercontent.com/c-ching/eefd00a02932d7d410fdc8144fde12f1/raw/28e496cf199b780913bb1affc99e6bfe4ea72368/snake"
snake = button2(snake_url)
doc["snake"].bind("click", snake.do)
################################## snake end
random_url = "https://gist.githubusercontent.com/c-ching/7af629a41da3f73c0a97cd0cb5efada0/raw/2a638202cf8b591ca87a23c7f97c93847f6bde40/Random"
random = button2(random_url)
doc["random"].bind('click', random.do)
random2_url = "https://gist.githubusercontent.com/c-ching/f8beed501b4aca5d97de5ef6d042e199/raw/746c4cf58b2cd4b5c13ec2390bfb731748a361a4/Random2"
random2 = button2(random2_url)
doc["random2"].bind('click', random2.do)
15x15_url = "https://gist.githubusercontent.com/c-ching/843e0c919272f09a2c698dff7929a978/raw/794c15b4586e24271aefd65f70d8908cfed7be01/15x15"
15x15 = button2(15x15_url)
doc["15x15"].bind('click', 15x15.do)
</script>
</p>
<h2>1bg3</h2><h3>41023248</h3>
<p><a href="/downloads/w12demo.txt">w12demo.txt</a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a>.</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> - 可以根據此規格定義, 新增 <button id="procflas">PROC flag</button> 按鈕.</p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a> - 可以根據此規格定義, 新增 <button id="usaflag">USA flag</button> 按鈕.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="a">紅點</button><button id="b">紅點暫停</button><button id="c">1加到10</button><button id="d">數字隨機</button><button id="e">國字數字隨機</button><button id="f">貪食蛇</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<p><!-- 這裡的畫布 id 為 brython_div --></p>
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<p><!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 --></p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

a_url = "https://gist.githubusercontent.com/smart-777/25e55498361d241b7c712b2f9a096db2/raw/0fb1400f42ddd319d9cbad866d42f7dcb309aef1/hw1.py"
a= button2(a_url)
doc["a"].bind('click', a.do)
################################# p261 start 
b_url = "https://gist.githubusercontent.com/smart-777/41948ac512cf4772fff1da23206837c6/raw/042387885d113e7b19cc64a691941e2f47174292/gistfile1.py"
b = button2(b_url)
doc["b"].bind('click', b.do)
################################## p261 end
################################## rocflag start
c_url = "https://gist.githubusercontent.com/smart-777/47977b714d24dfa387c9ccf955815d6c/raw/ec56daffeb52d5036ffbf0ae2a1c967be522840b/1%25E5%258A%25A0%25E5%2588%25B010.py"
c= button2(c_url)
doc["c"].bind("click", c.do)
################################## rocflag end
d_url = "https://gist.githubusercontent.com/smart-777/4750554ebdcb3e5382bacb4028e65d05/raw/d007b19e7beac52347ae098540b829cc85e98a78/W13-1.py"
d= button2(d_url)
doc["d"].bind("click", d.do)
################################## rocflag end
e_url = "https://gist.githubusercontent.com/smart-777/e1256970aa014b0644f420b3ae6f3f15/raw/721ffcd7ec54d841b1f450a73f9c4286c3e97c68/W13-2.py"
e= button2(e_url)
doc["e"].bind("click", e.do)
################################## rocflag end
f_url = "https://gist.githubusercontent.com/smart-777/1f6329e547b5f3318b1476c6ba3f3687/raw/d06a519c9c471d9eb597cebdc5f25cc65a5d4759/W13-3.py"
f= button2(f_url)
doc["f"].bind("click", f.do)
</script>
</p>
<h3>41023243</h3>
<p><a href="/downloads/w12demo.txt">w12demo.txt</a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a>.</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> - 可以根據此規格定義, 新增 <button id="procflas">PROC flag</button> 按鈕.</p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a> - 可以根據此規格定義, 新增 <button id="usaflag">USA flag</button> 按鈕.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="a">紅點</button><button id="b">紅點暫停</button><button id="c">1~10</button><button id="d">隨機</button><button id="e">隨機國字</button><button id="f">貪食蛇</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

a_url = "https://gist.githubusercontent.com/kenneth0812/383245923f349932b9cfc8f44ca105da/raw/ff358755cf4a18989adfed645406959a2d0dc315/41023243.py"
a = button2(a_url)
doc["a"].bind('click', a.do)
b_url = "https://gist.githubusercontent.com/kenneth0812/e48be854f6b7f0b45c5fe4351ecfb1af/raw/efb996527345c0690904c95f3d3f437ad04705ad/reddotstop.py"
b = button2(b_url)
doc["b"].bind('click', b.do)
c_url = "https://gist.githubusercontent.com/kenneth0812/4976552d84389830fa26dbe0057130ee/raw/e7ea3ea750b0a758506ce04559ebea58969c776a/1~10.py"
c = button2(c_url)
doc["c"].bind('click', c.do)
d_url = "https://gist.githubusercontent.com/kenneth0812/cc78dfb2d67ea6ea62bee96df9ecf169/raw/557922ff4bb5bb35d13310a567f1b1d54e8eef9f/W13%2520%25E6%25B8%25AC%25E9%25A9%2597.py"
d = button2(d_url)
doc["d"].bind('click', d.do)
e_url = "https://gist.githubusercontent.com/kenneth0812/cc78dfb2d67ea6ea62bee96df9ecf169/raw/557922ff4bb5bb35d13310a567f1b1d54e8eef9f/W13%2520%25E6%25B8%25AC%25E9%25A9%2597%2520%25E5%259C%258B%25E5%25AD%2597.py"
e = button2(e_url)
doc["e"].bind('click', e.do)
f_url = "https://gist.githubusercontent.com/kenneth0812/70008d04984bb875f25cdfe82c3e457b/raw/6c10fdac59087b90390985e6f5f8598102209798/snake.py"
f = button2(f_url)
doc["f"].bind('click', f.do)
</script>
</p>
<h3>41023234</h3>
<p><a href="/downloads/w12demo.txt"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">w12demo.txt</span></span></span></span></a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">中華民國國旗規格</span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">。</span></span></span></span></p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">PROC國旗規範</span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">——可以根據本</span></span></span><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">規範</span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">定義、增加</span></span></span></span><button id="procflas"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">進程標誌</span></span></span></span></button><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> 按鈕。</span></span></span></span></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">美國國旗規範</span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">——可以根據此</span></span></span><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">規範</span></span></span></a></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">定義、增加</span></span></span></span><button id="usaflag"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">美國國旗</span></span></span></span></button><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> 按鈕。</span></span></span></span></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">加 1 到 100</span></span></span></span></button><button id="p261"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">p261</span></span></span></span></button><button id="rocflag"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">中華民國耳朵</span></span></span></span></button><button id="hw1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">hw1</span></span></span></span></button><button id="dummy_snake"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">假蛇</span></span></span></span></button></p>
<p><button id="fimal1">fimal1</button></p>
<p><button id="fimal2">fimal2</button></p>
<p><button id="Bsnake">Bsnake</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">文檔名稱： </span></span></span></span><input id="kw_filename" placeholder="輸入文件名" type="text"/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.py</span></span></span></span></label> <span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="保存"/></span></span></span></span></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">跑</span></span></span></span></button> <button id="kw_show_console1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">輸出</span></span></span></span></button> <button id="kw_clear_console1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">清除輸出區</span></span></span></span></button><button id="clear_bd1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">清除繪圖區</span></span></span></span></button><button onclick="window.location.reload()"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">加載重</span></span></span></span></button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## rocflag start
hw1_url = "https://gist.githubusercontent.com/Maskie-Razzio/f752265cbca41da95585d9b6fb969935/raw/d12ffdf4b1ff21833ca5123163b4249b5c18a66e/version.key%2520words.py-%25209"
hw1 = button2(hw1_url)
doc["hw1"].bind("click", hw1.do)
################################## rocflag end
################################## rocflag start
dummy_snake_url = "https://gist.githubusercontent.com/Maskie-Razzio/5c5fb8099f70964c73b8980608239ca4/raw/f35d59d0fe2db9dc7c3661c718ec0f7c5a8271bc/dummy%2520snake"
dummy_snake = button2(dummy_snake_url)
doc["dummy_snake"].bind("click", dummy_snake.do)
################################## rocflag end
################################## rocflag start
fimal1_url = "https://gist.githubusercontent.com/Maskie-Razzio/1083b6e00537ee2d78d0a1ea6b017736/raw/6d519abaab5edf48a3c057c1f8940ffda2585c5c/15*15"
fimal1 = button2(fimal1_url)
doc["fimal1"].bind("click", fimal1.do)
################################## rocflag end
################################## rocflag start
fimal2_url = "https://gist.githubusercontent.com/Maskie-Razzio/b0caedf3cfa42d13eb474bad8c9be359/raw/81d933f6ee5e49e66d4c9ecd3d897c764648c9a4/final2"
fimal2 = button2(fimal2_url)
doc["fimal2"].bind("click", fimal2.do)
################################## rocflag end
################################## rocflag start
Bsnake_url = "https://gist.githubusercontent.com/Maskie-Razzio/35bee7aebe9238813739b47c6fe31f94/raw/45c6c5936808554d17baef522fdcb9d13c00cce4/Bsnake"
Bsnake = button2(Bsnake_url)
doc["Bsnake"].bind("click",Bsnake.do)
################################## rocflag end
</script>
</p>
<h3>41023210</h3>
<p><a href="/downloads/w12.txt">w12.txt</a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a>.</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> - 可以根據此規格定義, 新增 <button id="procflas">PROC flag</button> 按鈕.</p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a> - 可以根據此規格定義, 新增 <button id="usaflag">USA flag</button> 按鈕.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">add 1 to 100</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="W13_1">W13_1</button><button id="W13_2">W13_2</button><button id="final1">final1</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################# W13_1 start 
W13_1_url = "https://gist.githubusercontent.com/junpig10/69c04e11f2a80d21f540ebeb28f74beb/raw/b78a3cfda82e6026e53a2109346aa829600d309d/W13_1"
W13_1 = button2(W13_1_url)
doc["W13_1"].bind('click',W13_1.do)
################################## W13_1 end################################# W13_2 start 
W13_2_url = "https://gist.githubusercontent.com/junpig10/0b02a09a84e8f1a71f0e6a17901657b8/raw/84607c726471dff8d7c74167b237172c4f0ef23d/W13_2"
W13_2= button2(W13_2_url)
doc["W13_2"].bind('click',W13_2.do)
################################## W13_2 end
################################# final1 start 
final1_url = "https://gist.githubusercontent.com/junpig10/ca1df62af028f9caff5cc4206be77629/raw/a9a5495a77019dbdd2c467887a5d48fb361b9a63/final1"
final1= button2(final1_url)
doc["final1"].bind('click',final1.do)
################################## final1 end
</script>
</p>
<h3>41023208</h3>
<p><a href="/downloads/w12.txt">w12.txt</a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a>.</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> - 可以根據此規格定義, 新增 <button id="procflas">PROC flag</button> 按鈕.</p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a> - 可以根據此規格定義, 新增 <button id="usaflag">USA flag</button> 按鈕.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">add 1 to 100</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="w13_1">w13_1</button><button id="w13_2">w13_2</button><button id="final1">final1</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################# w13_1start 
w13_1_url = "https://gist.githubusercontent.com/ziyi8/a1b4939d8137eab6e153a5f95e500fe4/raw/4e280636a515089c1c834821e2d0164f38d160e2/w13_1.py"
w13_1 = button2(w13_1_url)
doc["w13_1"].bind('click', w13_1.do)
################################## w13_1 end
################################# w13_2start 
w13_2_url = "https://gist.githubusercontent.com/ziyi8/a1b4939d8137eab6e153a5f95e500fe4/raw/4e280636a515089c1c834821e2d0164f38d160e2/w13_2.py"
w13_2 = button2(w13_2_url)
doc["w13_2"].bind('click', w13_2.do)
################################## w13_2 end
################################# final1start 
final1_url = "https://gist.githubusercontent.com/ziyi8/083332dbed933f3aa59e5383da0ed9ae/raw/17e794c9bf54d45e892152a02e4d85e743760eb2/final1.py"
final1 = button2(final1_url)
doc["final1"].bind('click', final1.do)
################################## final1 end
</script>
</p>
<h2>1bg4</h2><h3>41023228</h3>
<p><a href="/downloads/w12demo.txt"></a></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">紅點</button><button id="p261">紅點按鈕</button><button id="rocflag">snake AI</button><button id="rocflag1">snake</button><button id="rocflag2">random</button><button id="rocflag3">random2</button><button id="rocflag4">1to 10</button><button id="rocflag5">final</button><button id="rocflag6">final2</button><button id="rocflag7">final3</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/RWE1116/0cec6496a5a27122e1ae936eadb82092/raw/db4faacd500d6c2e759de34cf97d3973bf757493/HW1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/RWE1116/75ce59aec0e534d9cb69a6026c84b8e5/raw/209dac8c6ff03ba434d5adb762a499b38a6eb8b1/red%2520point1.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/RWE1116/7e5db17cebc927d62d5f9c7d7aa7ec88/raw/49c54f51ca52b8fe6181d16d387de51cad13a8f7/auto%2520snake.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## rocflag start
rocflag1_url = "https://gist.githubusercontent.com/RWE1116/d1333e4df8de97319f1645106cc9a5d6/raw/b3f7b0f74e3bcbce36b50ac2c5ec265123c96487/snake.py"
rocflag1 = button2(rocflag1_url)
doc["rocflag1"].bind("click", rocflag1.do)
################################## rocflag end
################################## rocflag start
rocflag2_url = "https://gist.githubusercontent.com/RWE1116/cbaa7dfb5e3d34f649ab6f69c984a3f4/raw/4130355e72b87af5d3adae19331e4bcc282179a0/random.py"
rocflag2 = button2(rocflag2_url)
doc["rocflag2"].bind("click", rocflag2.do)
################################## rocflag end
################################## rocflag start
rocflag3_url = "https://gist.githubusercontent.com/RWE1116/d7a171b6fb6ced836b670745215b1755/raw/138ac3c03b3e98bee8686f8c08e85c370824ecd3/random2.py"
rocflag3 = button2(rocflag3_url)
doc["rocflag3"].bind("click", rocflag3.do)
################################## rocflag end
################################## rocflag start
rocflag4_url = "https://gist.githubusercontent.com/RWE1116/a199dd8ad3c2b5cbc6c1af2cb48e783e/raw/7586872fe6f838fd221612186318a4ea4d68f0df/1to%252010.py"
rocflag4 = button2(rocflag4_url)
doc["rocflag4"].bind("click", rocflag4.do)
################################## rocflag end
################################## rocflag start
rocflag5_url = "https://gist.githubusercontent.com/RWE1116/ea31352ca083e34ea10ede7de9ba5bf0/raw/23574a46752d889109d2f14fe520f2372d173ed5/%25E6%25A0%25BC%25E5%25AD%2590.py"
rocflag5 = button2(rocflag5_url)
doc["rocflag5"].bind("click", rocflag5.do)
################################## rocflag end
################################## rocflag start
rocflag6_url = "https://gist.githubusercontent.com/RWE1116/dccf002614a76c8b7712539c60c2f778/raw/fb7a570089c827f9ec5ea41e1d9448ac697c693f/final.py"
rocflag6 = button2(rocflag6_url)
doc["rocflag6"].bind("click", rocflag6.do)
################################## rocflag end
################################## rocflag start
rocflag7_url = "https://gist.githubusercontent.com/RWE1116/a199dd8ad3c2b5cbc6c1af2cb48e783e/raw/7586872fe6f838fd221612186318a4ea4d68f0df/1to%252010.py"
rocflag7 = button2(rocflag7_url)
doc["rocflag7"].bind("click", rocflag7.do)
################################## rocflag end

</script>
</p>
<h3>41023224</h3>
<p><a href="/downloads/w12demo.txt"></a></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">紅點</button><button id="p261">紅點按鈕</button><button id="rocflag">1加到10</button><button id="rocflag1">亂數中</button><button id="rocflag2">亂數英</button><button id="rocflag3">貪食蛇</button><button id="rocflag4">final1</button><button id="rocflag5">final2</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/41023224/9d8881a67b46e5793ab83e49e5d27701/raw/555808ae42c4ca3c16cec09f92f2f088bb7f4e8e/%25E7%25B4%2585%25E9%25BB%259E.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/41023224/84096bd119a06eff740c3b9af8eef4a0/raw/a7eabc980bf800327a6377e652fec405ea42c6ee/%25E7%25B4%2585%25E9%25BB%259E%25E6%258C%2589%25E9%2588%2595.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/41023224/3dc7dabb9ce0020d2589fe3ee63c4210/raw/76b5f1f25d352c6a93feac0fc67b78138c4db8e5/1%25E5%258A%25A0%25E5%2588%25B010.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## rocflag start
rocflag1_url = "https://gist.githubusercontent.com/41023224/112e429348785c682af9ed7db199968b/raw/64db55a096ad24011b407104457e8c86544e2d1f/random2.py"
rocflag1 = button2(rocflag1_url)
doc["rocflag1"].bind("click", rocflag1.do)
################################## rocflag end
################################## rocflag start
rocflag2_url = "https://gist.githubusercontent.com/41023224/97e979bd2f2885ba548754acbebddf56/raw/b01f05db406b730b525207f28bdcb50a436744f1/random.py"
rocflag2 = button2(rocflag2_url)
doc["rocflag2"].bind("click", rocflag2.do)
################################## rocflag end
################################## rocflag start
rocflag3_url = "https://gist.githubusercontent.com/41023224/3d0dedcb85e9329cdf2d4f8544faab0b/raw/4262a81b91d9df87320a197de51f4618f1d82800/%25E8%25B2%25AA%25E9%25A3%259F%25E8%259B%2587.py"
rocflag3 = button2(rocflag3_url)
doc["rocflag3"].bind("click", rocflag3.do)
################################## rocflag end
################################## rocflag start
rocflag4_url = "https://gist.githubusercontent.com/41023224/c204901727b55885e30e61403ee873d8/raw/fd03d94c8ef03ed904b23f61a71779a08a3a33ed/15X15.py"
rocflag4 = button2(rocflag4_url)
doc["rocflag4"].bind("click", rocflag4.do)
################################## rocflag end
################################## rocflag start
rocflag5_url = "https://gist.githubusercontent.com/41023224/f642f3993835bba910520eb7c6e69183/raw/7de8774f55a07ff4cabdfb6798aa7010fa995b3b/final2.py"
rocflag5 = button2(rocflag5_url)
doc["rocflag5"].bind("click", rocflag5.do)
################################## rocflag end
</script>
</p>
<h3>41023222</h3>
<p><a href="/downloads/w12demo.txt"></a></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to10">add 1 to 10</button><button id="red">red</button><button id="red2">red2</button><button id="snake">snake</button><button id="random">random</button><button id="random2">random2</button><button id="final1">final1</button><button id="final2">final2</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to10_url = "https://gist.githubusercontent.com/kolas911205/36eadc99fc331ca555f7ed4458c3c3d4/raw/1f19f833d6da47818eb2751cbd2157a00e65dccf/one%2520%2520ten"
add1to10 = button2(add1to10_url)
doc["add1to10"].bind('click', add1to10.do)
################################# red start 
red_url = "https://gist.githubusercontent.com/kolas911205/de1e41fe2e1944e20da1bdcb643de789/raw/a4af64bb0617baa901a8d6fac7fce22b5a4fe34f/hw1"
red = button2(red_url)
doc["red"].bind('click', red.do)
################################## red end
################################## red2 start
red2_url = "https://gist.githubusercontent.com/kolas911205/9b17e5246e37957b50a10702fa87d120/raw/c410fd06aaa3c026b1bc4033aed8725b0cffecf9/gistfile1.txt"
red2 = button2(red2_url)
doc["red2"].bind("click", red2.do)
################################## red2 end
################################## snake start
snake_url = "https://gist.githubusercontent.com/kolas911205/e40b46920132845f5fbc6808dd9de254/raw/05b260ad0366536bf9ecb5cd4280769e43e0ee8b/snake.py"
snake = button2(snake_url)
doc["snake"].bind("click", snake.do)
################################## snake end
random_url = "https://gist.githubusercontent.com/kolas911205/5a388cc3b65b377fec4ceec6e75ff859/raw/fe9946c272550ace3594e013274f8dffcf9fb68e/w13.py"
random = button2(random_url)
doc["random"].bind('click', random.do)
random2_url = "https://gist.githubusercontent.com/kolas911205/d5e0361ab649052019e5fcbf5b2b125e/raw/aa8249f18fbccc8698773bfa2c13ca5367df5935/w13-2.py"
random2 = button2(random2_url)
doc["random2"].bind('click', random2.do)
final1_url = "https://gist.githubusercontent.com/kolas911205/a2219f2dce8f9ab58101635ef93e7a5f/raw/aa7fb9a38e0913e71e110905be27cd1762009a24/15x15"
final1 = button2(final1_url)
doc["final1"].bind('click', final1.do)
final2_url = "https://gist.githubusercontent.com/kolas911205/c3a3a82d76f8fd13c80f404869da733a/raw/4be68ddefdf2a965e9a1a86c91873bbff31ac380/15x15%2520%25202"
final2 = button2(final2_url)
doc["final2"].bind('click', final2.do)
</script>
</p>
<h3>41023221</h3>
<p><a href="/downloads/w12demo.txt"></a></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="a">紅點</button><button id="b">紅點含暫停</button><button id="c">snake-ai</button><button id="d">random</button><button id="e">random2</button><button id="f">1加到10</button><button id="g">final_1</button><button id="h">final_2</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

a_url = "https://gist.githubusercontent.com/41023221/65ddf0100c168a3d81aab5b059001fbf/raw/a6fce9ee063fd6e75d587e8801f73ba2d8854853/hw1.py"
a = button2(a_url)
doc["a"].bind('click', a.do)
b_url = "https://gist.githubusercontent.com/41023221/30ed54e7883d32ac341a12f6a422ecda/raw/a485de7247c4db0539b2dfdace82a7c9953f2121/red2.py"
b = button2(b_url)
doc["b"].bind('click', b.do)
c_url = "https://gist.githubusercontent.com/41023221/f20689eac7e3b1a309156f2732b998f7/raw/0f8d40531f54b4786c75a2abac78c27669270f8d/snake.py"
c = button2(c_url)
doc["c"].bind('click', c.do)
d_url = "https://gist.githubusercontent.com/41023221/ae31fb6f38e688316151848963d7bf22/raw/a046fc1b64702d1cfd56dee5d2d2721abc13688e/random.py"
d = button2(d_url)
doc["d"].bind('click', d.do)
e_url = "https://gist.githubusercontent.com/41023221/55e5100e1fdcdf0b080e75f75f2aff80/raw/9b9c212ebe7ee8b6950404b1c1d1af9f746eaddf/random2.py"
e = button2(e_url)
doc["e"].bind('click', e.do)
f_url = "https://gist.githubusercontent.com/41023221/006763fa02022c359a039ee940091eaa/raw/2a6e379dfb78d42162225c0f1cd3f14a3faf75f2/1+10.py"
f = button2(f_url)
doc["f"].bind('click', f.do)
g_url = "https://gist.githubusercontent.com/41023221/d9b9267c59443cbf9e37a55dc76da0e3/raw/31c3a17445aad34d4c19993e5c2f55cad4246d99/%25E6%259C%259F%25E6%259C%25AB.py"
g = button2(g_url)
doc["g"].bind('click', g.do)
h_url = "https://gist.githubusercontent.com/41023221/550308a9bb550c83dfa7a53d230b23e3/raw/e28d7a30f10adea20e302c7fd956e85beedf2055/final2.py"
h = button2(h_url)
doc["h"].bind('click', h.do)
</script>
</p>
<h3>41023219</h3>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details"></a></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to10">add 1 to 10</button><button id="randomC">randomC</button><button id="randomE">randomE</button><button id="red1">red1</button><button id="red2">red2</button><button id="snake">snake</button><button id="final1">final1</button><button id="final2">final2</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to10_url = "https://gist.githubusercontent.com/gu811/41fb2da27b1847acca3b473658538003/raw/650e982db981852ed1a6539983d8ac79d6148324/one%2520to%2520ten.py"
add1to10 = button2(add1to10_url)
doc["add1to10"].bind('click', add1to10.do)
################################# p261 start 
randomC_url = "https://gist.githubusercontent.com/gu811/93713f34f921664d25bcf3f06583c346/raw/3f06ca4ac141ac9ece8eeced3be00d6c3dc71aa7/w13%25202.py"
randomC = button2(randomC_url)
doc["randomC"].bind('click', randomC.do)
################################## randomC end
################################## rocflag start
randomE_url = "https://gist.githubusercontent.com/gu811/604b01c013fbc8b2c78142ed08ae4e78/raw/8d30f457b01f81d23937de67cae37f33d21b8f33/w13%25201.py"
randomE = button2(randomE_url)
doc["randomE"].bind("click",randomE.do)
################################## randomE end
red1_url = "https://gist.githubusercontent.com/gu811/8555ac55a8a5c6eb740d0888c75d3199/raw/71a94b3a3c14613a3a6792cfc9511a7d8699756b/hw1"
red1 = button2(red1_url)
doc["red1"].bind("click",red1.do)
################################## red1 end
red2_url = "https://gist.githubusercontent.com/gu811/05f07cd5160be8fcb65e8dfa5b1ccfb1/raw/d3482ac7cd62b42a4b7eaf44149256423cac7397/hw1.py"
red2 = button2(red2_url)
doc["red2"].bind("click",red2.do)
################################## red2 end
snake_url = "https://gist.githubusercontent.com/gu811/283d171ad5837bcbdaa7649a5396d4c2/raw/9bcd8fa8a20c94c7655a6e7d6681cc56d520a957/hw3"
snake = button2(snake_url)
doc["snake"].bind("click",snake.do)
################################## snake end
final1_url = "https://gist.githubusercontent.com/gu811/b975ea404f8ab47d9a8e45c0ecbdb62b/raw/38150c5bc60d524c92c6d8d236690b9943b3e6e3/15x15"
final1 = button2(final1_url)
doc["final1"].bind("click",final1.do)
################################## final1 end
final2_url = "https://gist.githubusercontent.com/gu811/1b419c2d443dc499b2d0ca61ace37104/raw/3e6b175e48ccc33493a05690793e40f047fbae01/final2"
final2 = button2(final2_url)
doc["final2"].bind("click",final2.do)
################################## final2 end
</script>
</p>
<h3>41023212</h3>
<p><a href="/downloads/w12demo.txt"></a></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to10">add 1 to 10</button><button id="red">red</button><button id="red2">red2</button><button id="snake">snake</button><button id="randomC">randomC</button><button id="randomE">randomE</button><button id="final1">final1</button><button id="final2">final2</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to10_url = "https://gist.githubusercontent.com/yonqui0411/c42b3515bf53203b16a110bd77470062/raw/3872f69d32ed294ec11f972289f7c91b20f4e1ea/one~ten"
add1to10 = button2(add1to10_url)
doc["add1to10"].bind('click', add1to10.do)
################################# red start 
red_url = "https://gist.githubusercontent.com/yonqui0411/00e80ee29c29d12c02ee221f75d510a4/raw/f5e2dd34a6b6d110c72895bf8014042600653e48/hw1.py"
red = button2(red_url)
doc["red"].bind('click', red.do)
################################## red end
################################## red2 start
red2_url = "https://gist.githubusercontent.com/yonqui0411/323db8adab4261733df66cb30e0d5286/raw/77ba4687377f63f3704c8da6675e691f6a30c522/hw1-2.py"
red2 = button2(red2_url)
doc["red2"].bind("click", red2.do)
################################## red2 end
################################## snake start
snake_url = "https://gist.githubusercontent.com/yonqui0411/808efb0af8082935eea583cdda7f87b9/raw/f4ed6e3c4328ae735ea82ff5f6d48e310ad454c0/snake"
snake = button2(snake_url)
doc["snake"].bind("click", snake.do)
################################## snake end
randomC_url = "https://gist.githubusercontent.com/yonqui0411/c3c829b9d4ddcb2db203913b9ce9888a/raw/8c537fc2bd63074a2ff3fdde6473f8676f922e30/W13%25E4%25B8%25AD.py"
randomC = button2(randomC_url)
doc["randomC"].bind('click', randomC.do)
randomE_url = "https://gist.githubusercontent.com/yonqui0411/a5022e6ab4dfd0ac31f3881e96e05728/raw/937b49c9362a76ec87caa09f92e21a1ace9cfe7b/W13.py"
randomE = button2(randomE_url)
doc["randomE"].bind('click', randomE.do)
final1_url = "https://gist.githubusercontent.com/yonqui0411/a9b0e91c931f0c59ed01432f83741f5c/raw/139933d8f588483f2b44cff4265680df33dd81d9/15x15.py"
final1= button2(final1_url)
doc["final1"].bind('click', final1.do)
final2_url = "https://gist.githubusercontent.com/yonqui0411/501132256ab0b7146465954fe55e7921/raw/c7635512799df20e7670a8c38b7389eed31dd687/final2.py"
final2= button2(final2_url)
doc["final2"].bind('click', final2.do)
</script>
</p>
<h2>1bg5</h2><h3>41023217</h3>
<p><a href="/downloads/w12demo.txt">w12demo.txt</a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a>.</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> - 可以根據此規格定義, 新增 <button id="procflas">PROC flag</button> 按鈕.</p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a> - 可以根據此規格定義, 新增 <button id="usaflag">USA flag</button> 按鈕.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">add 1 to 100</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="移動方塊">移動方塊</button><button id="w13_1">w13_1</button><button id="w13_2">w13_2</button><button id="final1">final1</button><button id="final2">final2</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## 移動方塊 start
移動方塊_url = "https://gist.githubusercontent.com/yuwei0000/2ff47b556a9314cd7c00464408fbc84f/raw/1855e0150e22cc3e0f0645d9b38d6ce4966d68e7/1.%25E5%25B7%25A6%25E5%258F%25B3%25E7%25A2%25B0%25E6%2592%259E%25E7%25A7%25BB%25E5%258B%2595%25E7%259A%2584%25E7%25B4%2585%25E8%2589%25B2%25E6%2596%25B9%25E5%25A1%258A%25EF%25BC%258C%25E5%2585%2588%25E7%25A7%25BB%25E5%258B%2595%25E5%2588%25B0%25E7%2595%25AB%25E9%259D%25A2%25E4%25B8%25AD%25E5%25BF%2583%25E9%25BB%259E%25E4%25BD%258D%25E7%25BD%25AE%25EF%25BC%258C%25E4%25B8%258B%25E4%25B8%258A%25E7%25A2%25B0%25E6%2592%259E%25E7%25A7%25BB%25E5%258B%2595"
移動方塊 = button2(移動方塊_url)
doc["移動方塊"].bind("click", 移動方塊.do)
################################## 移動方塊 end

################################## w13_1 start
w13_1_url = "https://gist.githubusercontent.com/yuwei0000/a5ecd98fcbfc24d28b62cc31762a7117/raw/f57e8dfb687efb9bcdbab5a495408641ad3f63f7/Exam1"
w13_1 = button2(w13_1_url)
doc["w13_1"].bind("click", w13_1.do)
################################## w13_1 end
################################## w13_2 start
w13_2_url = "https://gist.githubusercontent.com/yuwei0000/3a778937c8bdd0b358464ab2e86aeabe/raw/31a4c3f9e0f2d9b8b2b9cab5646016262e8d155f/Exam2"
w13_2 = button2(w13_2_url)
doc["w13_2"].bind("click", w13_2.do)
################################## w13_2 end
################################## final1 start
final1_url = "https://gist.githubusercontent.com/yuwei0000/c43eac996530216dbd822824aae28d43/raw/b13b7ca01d5b7a8beed9ce6b993ca08be6e8d084/final1"
final1 = button2(final1_url)
doc["final1"].bind("click", final1.do)
################################## final1 end
################################## final2 start
final2_url = "https://gist.githubusercontent.com/yuwei0000/e3feb47cac68eb2d2d009cdb1fbe9f12/raw/1190f4a27509df28b02e376df7050ed93efc21e1/final2"
final2 = button2(final2_url)
doc["final2"].bind("click", final2.do)
################################## final2 end
</script>
</p>
<h3>41023216</h3>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">add 1 to 100</button><button id="add1to10">add 1 to 10</button><button id="rocflag">ROC flag</button><button id="cube1">cube1</button><button id="cube2">cube2</button><button id="final1">final1</button><button id="final2">final2</button><button id="w13">w13</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# add1to10 start 
add1to10_url = "https://gist.githubusercontent.com/41023216/b371d7d0a159fad8ef2ed2622331e594/raw/6da036cc60a72c2a0502a437a51ce1116bb16e9c/1+10"
add1to10 = button2(add1to10_url)
doc["add1to10"].bind('click', add1to10.do)
################################## add1to10 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## cube1 start
cube1_url = "https://gist.githubusercontent.com/41023216/76fe64114651575493e585bbe25ede97/raw/5fa14b6560192f73c4f79bbbe7e7357bd0688c61/hw-1"
cube1 = button2(cube1_url)
doc["cube1"].bind("click", cube1.do)
################################## cube1 end
################################## cube2 start
cube2_url = "https://gist.githubusercontent.com/41023216/95c3fc60cf4439d15447e3a81485ca88/raw/83e0a3b3386e244e7691694a8472f39a71e33066/hw-2"
cube2 = button2(cube2_url)
doc["cube2"].bind("click", cube2.do)
################################## cube2 end
################################## final1 start
final1_url = "https://gist.githubusercontent.com/41023216/7698e8ceac968de9f3e5da356c22cbe2/raw/7353cd4c118f4e4fa18ba2ab6025b374238ec07f/final1"
final1 = button2(final1_url)
doc["final1"].bind("click", final1.do)
################################## final1 end
################################## final1 start
final2_url = "https://gist.githubusercontent.com/41023216/dde3d71196e4e976c8dde3a1a7d21342/raw/713d8c46bb5dfea66d099b814a3ccd3e3d6d5e7e/final2"
final2 = button2(final2_url)
doc["final2"].bind("click", final2.do)
################################## final2 end
################################## w13 start
w13_url = "https://gist.githubusercontent.com/41023216/95cb2087355680feb2dbe92322eac0ec/raw/7693b38f11fd253e1df0dacbc7ccfa92c22bb42c/exam%25E5%259C%258B%25E5%25AD%2597"
w13 = button2(w13_url)
doc["w13"].bind("click", w13.do)
################################## w13 end
</script>
</p>7

<h2>1bg6</h2><h3>41023250</h3>
<p><a href="/downloads/w12demo.txt">w12demo.txt</a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a>.</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> - 可以根據此規格定義, 新增 <button id="procflas">PROC flag</button> 按鈕.</p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a> - 可以根據此規格定義, 新增 <button id="usaflag">USA flag</button> 按鈕.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="cube">cube</button><button id="bottoncube">cube-b</button><button id="add1to100">add 1 to 100</button><button id="W13">W13</button><button id="p261">2.6-1</button><button id="rocflag">ROC flag</button><button id="final1">final1</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/Ruiiide/356a84813463dc905f02d6702b2c0669/raw/180b385ac24d5b43990e9fe3d1fa370f184820ae/41023250"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/Ruiiide/9cd1584e02d262737a66c60269373816/raw/c8b5534aa3907874019e0ab727441ee93583909b/41023250"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/41023226/6b0a9c922c0dbc66903fa0d9518959df/raw/b6b88bcfda9ec5075000705a27f6c48b5e338310/2.6-1"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################# W13 start 
W13_url = "https://gist.githubusercontent.com/41023226/aa88b6d2f3b16a3026b132cb6835652e/raw/4183b09d5c8e5bcb5753501ec9dba52b6e3b30a6/W13"
W13 = button2(W13_url)
doc["W13"].bind('click', W13.do)
################################## W13 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################# cube start 
cube_url = "https://gist.githubusercontent.com/Ruiiide/b5337dbbf12bd979e45694a4fac906e8/raw/eb5c22b8d30925082994a14cc14eaf775c9d08f4/41023250"
cube = button2(cube_url)
doc["cube"].bind('click', cube.do)
################################## cube end
################################# bottoncube start 
bottoncube_url = "https://gist.githubusercontent.com/Ruiiide/bd3288e0ecb068ea4249b7a514770f0e/raw/02c670be255d5d30b82f60187b028d82f6c0afcb/41023250"
bottoncube = button2(bottoncube_url)
doc["bottoncube"].bind('click', bottoncube.do)
################################## bottoncube end
################################# final1 start 
final1_url = "https://gist.githubusercontent.com/41023226/b3d3e11c3092fc7419232091c87dd60d/raw/55adf21455adabd7bed185c908e030e070c8c81c/final1"
final1 = button2(final1_url)
doc["final1"].bind('click', final1.do)
################################## final1 end
</script>
</p>
<h3>41023233</h3>
<p><a href="/downloads/w12demo.txt">w12demo.txt</a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a>.</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> - 可以根據此規格定義, 新增 <button id="procflas">PROC flag</button> 按鈕.</p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a> - 可以根據此規格定義, 新增 <button id="usaflag">USA flag</button> 按鈕.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="final2">final2</button><button id="w13">w13</button><button id="cube">cube</button><button id="bottoncube">cube-b</button><button id="add1to100">add 1 to 100</button><button id="rocflag">ROC flag</button><button id="final1">final1</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/Angus676/34b83594ad0062234129671ccd7ab7f6/raw/f4867a6a787a73e82e101c8d4f8ffec89b5cef0c/gistfile1.txt"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/Angus676/9c400c80ddcaee48b531703cc8d69447/raw/8fe307c37e5a712493059a2667f346fcb0974c14/1~100"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)

################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/Angus676/ed594ed43ad7d2e2ce60e8f928c98566/raw/2d7a66c87faa31ac667acc2d6f568596b533049c/rocflag"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################# cube start 
cube_url = "https://gist.githubusercontent.com/Angus676/7d82b9b28fd075d374efec346231789a/raw/52fbdfa050b2ace240786fd6d486405964262a48/cp2021%2520w1%2520(1)"
cube = button2(cube_url)
doc["cube"].bind('click', cube.do)
################################## cube end
################################# bottoncube start 
bottoncube_url = "https://gist.githubusercontent.com/Angus676/f715b9b050654e6ed4c3697337771e96/raw/248e7244de88e862986d0b61dba617cf191e6a3d/cp2021%2520w1%2520(2)"
bottoncube = button2(bottoncube_url)
doc["bottoncube"].bind('click', bottoncube.do)
################################## bottoncube end
################################# final1 start 
final1_url = "https://gist.githubusercontent.com/41023226/b3d3e11c3092fc7419232091c87dd60d/raw/55adf21455adabd7bed185c908e030e070c8c81c/final1"
final1 = button2(final1_url)
doc["final1"].bind('click', final1.do)
################################## final1 end
################################# w13 start 
w13_url = "https://gist.githubusercontent.com/Angus676/cd6dc8433eac19626237af125bb1dc7e/raw/eac9a7e3c174116b9d6a95bbd35ca51d3d60255a/W13"
w13 = button2(w13_url)
doc["w13"].bind('click', w13.do)
################################## w13 end
################################# final2 start 
final2_url = "https://gist.githubusercontent.com/Angus676/dad04acbf36d9921e9164c5d1e8ee76c/raw/543ae89f8a9a9018eecfcbc251956625fed65c31/final2"
final2 = button2(final2_url)
doc["final2"].bind('click', final2.do)
################################## final2 end
</script>
</p>
<h3>41023232</h3>
<p><a href="/downloads/w12demo.txt">w12demo.txt</a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a>.</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> - 可以根據此規格定義, 新增 <button id="procflas">PROC flag</button> 按鈕.</p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a> - 可以根據此規格定義, 新增 <button id="usaflag">USA flag</button> 按鈕.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="cube">cube</button><button id="bottoncube">cube-b</button><button id="add1to100">add 1 to 100</button><button id="rocflag">ROC flag</button><button id="final1">final1</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/41023226/3eecdaab63826f23fc59577b61f05a1e/raw/9025db3d3f46fbad66ca7964626a6559cd04ac79/1%2520add%2520to%252010"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/YUN4/1aa2a5c48df0c74d35ded61aef778725/raw/9a84a51fccfd09010c3221818408e600113e3c8f/41023232_1%2520add%2520to100"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/YUN4/3542de4729c3efceca18410e45e27eff/raw/5741d5f8110e22d01d913cef98025c71e9b5c48d/flag"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################# cube start 
cube_url = "https://gist.githubusercontent.com/YUN4/d7b7e5b3af4637f33dea81c24b9bbfbb/raw/a7b3ee3fdfac6f403696d93e327750027c901e01/cube"
cube = button2(cube_url)
doc["cube"].bind('click', cube.do)
################################## cube end
################################# bottoncube start 
bottoncube_url = "https://gist.githubusercontent.com/YUN4/77b07398965793686ec2ea82c27a52c4/raw/093fd133e08a750a713b5401d87cbb48ccb900b6/buttomcube"
bottoncube = button2(bottoncube_url)
doc["bottoncube"].bind('click', bottoncube.do)
################################## bottoncube end
################################# final1 start 
final1_url = "https://gist.githubusercontent.com/YUN4/621e5aaeca6b9c67bf8f213dd9eb582b/raw/78c88d57a68264b5533b9221a1c94bd8f6c0ed89/fin"
final1 = button2(final1_url)
doc["final1"].bind('click', final1.do)
################################## final1 end
</script>
</p>
<h3>41023231</h3>
<p><a href="/downloads/w12demo.txt">w12demo.txt</a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a>.</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> - 可以根據此規格定義, 新增 <button id="procflas">PROC flag</button> 按鈕.</p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a> - 可以根據此規格定義, 新增 <button id="usaflag">USA flag</button> 按鈕.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="cube">cube</button><button id="bottoncube">cube-b</button><button id="add1to100">add 1 to 100</button><button id="W13">W13</button><button id="p261">2.6-1</button><button id="rocflag">ROC flag</button><button id="final1">final1</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/41023226/3eecdaab63826f23fc59577b61f05a1e/raw/9025db3d3f46fbad66ca7964626a6559cd04ac79/1%2520add%2520to%252010"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/zhan-uj/6a3fc5f6a8a857b54bc8d35abc76178b/raw/b9e545eba77f7c25f3bac4bb26f00a1c948b121b/2.6-1"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################# W13 start 
W13_url = "https://gist.githubusercontent.com/zhan-uj/18163d62eab05f48e9d84ef31203d0f7/raw/517f307e11004f73ba1e313726fd850f0a8988f0/w13"
W13 = button2(W13_url)
doc["W13"].bind('click', W13.do)
################################## W13 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################# cube start 
cube_url = "https://gist.githubusercontent.com/zhan-uj/251520ec69030c143cbdab726197a9c1/raw/14f2923965764cf1ab3528b0d32c6203af663240/cube"
cube = button2(cube_url)
doc["cube"].bind('click', cube.do)
################################## cube end
################################# bottoncube start 
bottoncube_url = "https://gist.githubusercontent.com/41023226/9f84f6db885be7f7f3df30226a38e8f6/raw/1bf9cecc0666910718ab300ed80449d2888a5204/cp2021%2520w1%2520(3)"
bottoncube = button2(bottoncube_url)
doc["bottoncube"].bind('click', bottoncube.do)
################################## bottoncube end
################################# final1 start 
final1_url = "https://gist.githubusercontent.com/zhan-uj/f4b3d893cbc243d911ef01bd2ce4a2bf/raw/19d4febd1dc39d7ce5354bc1feb3234a1bd531f4/final-1"
final1 = button2(final1_url)
doc["final1"].bind('click', final1.do)
################################## final1 end
</script>
</p>
<h3>41023230</h3>
<p><a href="/downloads/w12demo.txt">w12demo.txt</a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a>.</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> - 可以根據此規格定義, 新增 <button id="procflas">PROC flag</button> 按鈕.</p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a> - 可以根據此規格定義, 新增 <button id="usaflag">USA flag</button> 按鈕.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="cube">cube</button><button id="bottoncube">cube-b</button><button id="add1to100">add 1 to 100</button><button id="rocflag">ROC flag</button><button id="final1">final1</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/41023226/3eecdaab63826f23fc59577b61f05a1e/raw/9025db3d3f46fbad66ca7964626a6559cd04ac79/1%2520add%2520to%252010"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/41023230/e464e1981518f729e827e72382b3ccf9/raw/80141d00ce4ff6639cd178e218fe763505b4bc1e/1+~100"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)

################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/41023230/b70d106d2ef825c3bcede8793a18b57a/raw/75309b5ba66ad682c3987a8a44a9132481c6d570/ROCflag"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################# cube start 
cube_url = "https://gist.githubusercontent.com/41023230/2eaae4fb88f1c6bfffced3e8aef2ad01/raw/5b7ad0dbb46570f9331518a972e11fe88a00ee4a/cube"
cube = button2(cube_url)
doc["cube"].bind('click', cube.do)
################################## cube end
################################# bottoncube start 
bottoncube_url = "https://gist.githubusercontent.com/41023230/39ffb766bac8cc86fd52351eb97782f8/raw/54c43617f6382b23cb3059a38b932b86edaf0ab7/cube__button"
bottoncube = button2(bottoncube_url)
doc["bottoncube"].bind('click', bottoncube.do)
################################## bottoncube end
################################# final1 start 
final1_url = "https://gist.githubusercontent.com/41023230/073b308ea461b3e3099d077edda9138d/raw/c2fdb424d98b92e0d7eecae86516eba5082516dc/final1"
final1 = button2(final1_url)
doc["final1"].bind('click', final1.do)
################################## final1 end
</script>
</p>
<h3>41023227</h3>
<p><a href="/downloads/w12demo.txt">w12demo.txt</a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a>.</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> - 可以根據此規格定義, 新增 <button id="procflas">PROC flag</button> 按鈕.</p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a> - 可以根據此規格定義, 新增 <button id="usaflag">USA flag</button> 按鈕.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="cube">cube</button><button id="bottoncube">cube-b</button><button id="add1to100">add 1 to 100</button><button id="W13">W13</button><button id="p261">2.6-1</button><button id="rocflag">ROC flag</button><button id="final1">final1</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/ken6003/14c705e65b281c43f710fbbfccec6c68/raw/05fb1157fbc87e52739a88eb8bf74bda2d1deb77/41023227"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/ken6003/298da91267db285a5590036baad268d7/raw/a33b481ad4665ef5548a63d99c4c5619f9ff2ed8/41023227"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/41023226/6b0a9c922c0dbc66903fa0d9518959df/raw/b6b88bcfda9ec5075000705a27f6c48b5e338310/2.6-1"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################# W13 start 
W13_url = "https://gist.githubusercontent.com/41023226/aa88b6d2f3b16a3026b132cb6835652e/raw/4183b09d5c8e5bcb5753501ec9dba52b6e3b30a6/W13"
W13 = button2(W13_url)
doc["W13"].bind('click', W13.do)
################################## W13 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################# cube start 
cube_url = "https://gist.githubusercontent.com/ken6003/12155700b72b65ab78361f55a4737703/raw/7509741cb74fd26ca53e479b7fca081a1bc9135e/41023227"
cube = button2(cube_url)
doc["cube"].bind('click', cube.do)
################################## cube end
################################# bottoncube start 
bottoncube_url = "https://gist.githubusercontent.com/ken6003/efa5958f6425e2e2c8118231f26554a8/raw/0a3f097188896ce47d47ed29ea8da7bf9b5afc17/41023227"
bottoncube = button2(bottoncube_url)
doc["bottoncube"].bind('click', bottoncube.do)
################################## bottoncube end
################################# final1 start 
final1_url = "https://gist.githubusercontent.com/41023226/b3d3e11c3092fc7419232091c87dd60d/raw/55adf21455adabd7bed185c908e030e070c8c81c/final1"
final1 = button2(final1_url)
doc["final1"].bind('click', final1.do)
################################## final1 end
</script>
</p>
<h3>41023226</h3>
<p><a href="/downloads/w12demo.txt"></a>初始:一加到十</p>
<p>1.hw1的紅色方塊</p>
<p>2.紅色方塊加上按鈕控制</p>
<p>3.從一加到一百</p>
<p>4.w13 ramdom的初體驗</p>
<p>5.講義2-6的幾題練習</p>
<p>6.國旗</p>
<p>7.final1</p>
<p>8.final2</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="cube">cube</button><button id="bottoncube">cube-b</button><button id="add1to100">add 1 to 100</button><button id="W13">W13</button><button id="p261">2.6-1</button><button id="rocflag">ROC flag</button><button id="final1">final1</button><button id="final2">final2</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/41023226/3eecdaab63826f23fc59577b61f05a1e/raw/9025db3d3f46fbad66ca7964626a6559cd04ac79/1%2520add%2520to%252010"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/41023226/6b0a9c922c0dbc66903fa0d9518959df/raw/b6b88bcfda9ec5075000705a27f6c48b5e338310/2.6-1"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################# W13 start 
W13_url = "https://gist.githubusercontent.com/41023226/aa88b6d2f3b16a3026b132cb6835652e/raw/4183b09d5c8e5bcb5753501ec9dba52b6e3b30a6/W13"
W13 = button2(W13_url)
doc["W13"].bind('click', W13.do)
################################## W13 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################# cube start 
cube_url = "https://gist.githubusercontent.com/41023226/0f153384b24b598e859edcbb7f68852a/raw/e015ff3f9571cc777ecf18e4dc64810d89a7d39c/cp2021%2520w1%2520(1)"
cube = button2(cube_url)
doc["cube"].bind('click', cube.do)
################################## cube end
################################# bottoncube start 
bottoncube_url = "https://gist.githubusercontent.com/41023226/9f84f6db885be7f7f3df30226a38e8f6/raw/1bf9cecc0666910718ab300ed80449d2888a5204/cp2021%2520w1%2520(3)"
bottoncube = button2(bottoncube_url)
doc["bottoncube"].bind('click', bottoncube.do)
################################## bottoncube end
################################# final1 start 
final1_url = "https://gist.githubusercontent.com/41023226/b3d3e11c3092fc7419232091c87dd60d/raw/55adf21455adabd7bed185c908e030e070c8c81c/final1"
final1 = button2(final1_url)
doc["final1"].bind('click', final1.do)
################################## final1 end
################################# final2 start 
final2_url = "https://gist.githubusercontent.com/41023226/010763fd5272b66a75e085c48f465ebf/raw/a440a91295e2bfc7e8cd652c6a50b1081c7d3a20/final2"
final2 = button2(final2_url)
doc["final2"].bind('click', final2.do)
################################## final2 end
</script>
</p>
<h2>1bg7</h2><h3>40971227</h3>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/Xiang41023113/fd81c4b042dc48a0e92941e530aba29d/raw/c84eb0d77210e9e10cc587a3ef82d8cdc23b725b/W14"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<!-- 執行與清除按鈕結束 -->
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 -->
<div id="brython_div"></div>
<!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js">
</
</script>
<h2>1bg8</h2><h3>41023242</h3>
<p><a href="/downloads/w12demo.txt">w12demo.txt</a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a>.</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> - 可以根據此規格定義, 新增 <button id="procflas">PROC flag</button> 按鈕.</p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a> - 可以根據此規格定義, 新增 <button id="usaflag">USA flag</button> 按鈕.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="final2">final2</button><button id="w13">w13</button><button id="cube">cube</button><button id="bottoncube">cube-b</button><button id="add1to100">add 1 to 100</button><button id="rocflag">ROC flag</button><button id="final1">final1</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/41023242/e5dea3ba9d126eb66ee812013826901e/raw/aa3d8beedf664b483975e18ab583d493e720746b/gistfile1.txt"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/41023242/d5e1b0c923ee2fb0ef138eb347424b93/raw/7928db8470ddd8c7349898acd7da1b44ec7dd1dc/add%25201~100"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)

################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/41023242/2bb69fb19e087d15c1b58e031f47efa9/raw/83c08a807d5f4b64da57d94d4b93607068d7dda4/rocflag"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################# cube start 
cube_url = "https://gist.githubusercontent.com/41023242/3557cb7275e7fb510c5f629538e02e4b/raw/bcd533e1c29fcfb2fcf405e88048a631392fd40f/hw1"
cube = button2(cube_url)
doc["cube"].bind('click', cube.do)
################################## cube end
################################# bottoncube start 
bottoncube_url = "https://gist.githubusercontent.com/41023242/73a8cdda6b9f92fa19f880942655e2c8/raw/c03d1555116093b2b6e12de37117be7a4a963637/hw1"
bottoncube = button2(bottoncube_url)
doc["bottoncube"].bind('click', bottoncube.do)
################################## bottoncube end
################################# final1 start 
final1_url = "https://gist.githubusercontent.com/41023242/afcf230b9c0a70301b852a21cbe73344/raw/006050a1c1b7a69ad8df39dd81c49fe9d7b330fc/final"
final1 = button2(final1_url)
doc["final1"].bind('click', final1.do)
################################## final1 end
################################# w13 start 
w13_url = "https://gist.githubusercontent.com/41023242/b09079edc57a94133cda7f6c120ebc1a/raw/610a2b32e10cd0d05e3899aac0fe062237f1fd2f/w13"
w13 = button2(w13_url)
doc["w13"].bind('click', w13.do)
################################## w13 end
################################# final2 start 
final2_url = "https://gist.githubusercontent.com/41023242/e5c773bf4e1e12753f1b97e62ec5cf16/raw/01aee4c240d2fe76e04c3407add0a3cd7971921d/gistfile1.txt"
final2 = button2(final2_url)
doc["final2"].bind('click', final2.do)
################################## final2 end
</script>
</p>
<h3>41023237 </h3>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">1+2+...+10</button><button id="sk">貪吃蛇</button><button id="red">紅點</button><button id="frial1">frial1</button><button id="frial2">frial2</button><button id="end">期終考試</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/www000123/b7092d110f2e0e6dc59bc0ad31608f8c/raw/045fc9e31a54565a925f24f5445f7edb02fca94d/afafaf"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/www000123/b7092d110f2e0e6dc59bc0ad31608f8c/raw/045fc9e31a54565a925f24f5445f7edb02fca94d/afafaf"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# sk start 
sk_url = "https://gist.githubusercontent.com/www000123/8a35a79a245052e07cd3522533f12dbe/raw/193d0bf5a829f0de25cc0dfff15dc27b07ec2f83/%25E8%25B2%25AA%25E5%2590%2583%25E8%259B%2587"
sk = button2(sk_url)
doc["sk"].bind('click', sk.do)
################################## sk end
################################## red start
red_url = "https://gist.githubusercontent.com/www000123/34ca70159a333bf01d9658933e7e2845/raw/4fe4e5b92949effa817ba8e81bba0685ad83eafd/%25E7%25B4%2585%25E9%25BB%259E"
red = button2(red_url)
doc["red"].bind("click", red.do)
################################## red end
################################## frial1 start
frial1_url = "https://gist.githubusercontent.com/www000123/d4c1e394f2ff8c638a1f8d5e0656157d/raw/4e8b5e8331566d19bddaa9e7dc092ce339f11f3d/%25E8%25AA%25B2%25E5%25A0%2582%25E8%2580%2583%25E8%25A9%25A6"
frial1 = button2(frial1_url)
doc["frial1"].bind("click", frial1.do)
################################## frial1 end
################################## frial2 start
frial2_url = "https://gist.githubusercontent.com/www000123/e5b0cf65b4b6dc4b247fca6a9265a43a/raw/2177450d8ecdef3ada0095e47f3040678faf07a9/%25E8%25AA%25B2%25E5%25A0%2582%25E8%2580%2583%25E8%25A9%25A62%2520%25E6%2594%25B9%25E8%2589%25AF"
frial2 = button2(frial2_url)
doc["frial2"].bind("click", frial2.do)
################################## frial2 end
################################## end start
end_url = "https://gist.githubusercontent.com/www000123/ce66351f3ce9c9571bb0117d62710ca5/raw/d8d7c5d3f6dc71ac10d36ded612ed4ac71110835/%25E6%259C%259F%25E7%25B5%2582%25E8%2580%2583%25E8%25A9%25A6%2520%25E7%25AC%25AC%25E4%25BA%258C%25E6%25AC%25A1"
end = button2(end_url)
doc["end"].bind("click", end.do)
################################## end end
</script>
</p>
<h3>41023236</h3>
<p><a href="/downloads/w12demo.txt">w12demo.txt</a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a>.</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> - 可以根據此規格定義, 新增 <button id="procflas">PROC flag</button> 按鈕.</p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a> - 可以根據此規格定義, 新增 <button id="usaflag">USA flag</button> 按鈕.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="w13">w13</button><button id="cube">cube</button><button id="bottoncube">cube-b</button><button id="add1to100">add 1 to 100</button><button id="rocflag">ROC flag</button><button id="final1">final1</button><button id="final2">final2</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/Angus676/34b83594ad0062234129671ccd7ab7f6/raw/f4867a6a787a73e82e101c8d4f8ffec89b5cef0c/gistfile1.txt"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/Bored1236/94891a186525fd16d0c26708fbbd4a9c/raw/dbad0c533870713f6cbe9badfae3434627c59aaa/gistfile1.txt"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)

################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/Bored1236/694148af7d7cdee277d2b4a0c59c359e/raw/32ccb7f9938140bcd33b76c0186fbf61d0287f13/41023236"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################# cube start 
cube_url = "https://gist.githubusercontent.com/Bored1236/386c05c4d8f9ae86eb17d4dc96638e06/raw/83a90e0d43e96398f6979649b7e14704fc3bf70e/41023236"
cube = button2(cube_url)
doc["cube"].bind('click', cube.do)
################################## cube end
################################# bottoncube start 
bottoncube_url = "https://gist.githubusercontent.com/Bored1236/2240a9e8bad47a782428196a001a83a9/raw/43eccf0876c7a5c6e02ae38719e182ec17a8fdec/41023236"
bottoncube = button2(bottoncube_url)
doc["bottoncube"].bind('click', bottoncube.do)
################################## bottoncube end
################################# final1 start 
final1_url = "https://gist.githubusercontent.com/Bored1236/2810ceb8a9adae2d4bc66addbfa447bd/raw/ed88071a0c741b82d50d4d833a5b767c6941dc1e/41023236"
final1 = button2(final1_url)
doc["final1"].bind('click', final1.do)
################################## final1 end
################################# w13 start 
w13_url = "https://gist.githubusercontent.com/Bored1236/3fbbe9acd30a28dd6b990d208a2f213e/raw/f43e0b81ffa221db5033591fede94fac536fd760/41023236"
w13 = button2(w13_url)
doc["w13"].bind('click', w13.do)
################################## w13 end
################################# final2 start 
final2_url = "https://gist.githubusercontent.com/Bored1236/5acba6fede04e7e0f5533cf232485879/raw/d8b17275cbc4d19f437e3afba16a6bdf2d389828/41023236"
final2 = button2(final2_url)
doc["final2"].bind('click', final2.do)
################################## final2 end
</script>
</p>
© 2022 GitHub, Inc.
Terms
Privacy
Security

